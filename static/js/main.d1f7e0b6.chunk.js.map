{"version":3,"sources":["js/hooks/http.hook.js","assets/images/icons/logo-rs-school.svg","js/blocks/footer.js","js/context/AuthContext.js","js/context/WordContext.js","js/blocks/burger.js","js/blocks/header-autorized.js","js/layouts/MainLayout.js","js/blocks/registration.js","js/blocks/login.js","assets/images/images/mainpageimage.png","assets/images/images/games.png","assets/images/images/online.png","assets/images/images/headphone.png","assets/images/images/studybook.png","assets/images/images/avatar1.png","assets/images/images/avatar2.png","js/pages/MainPage.js","js/componets/wordtest.js","js/componets/taskcompl.js","js/pages/testpage.js","js/pages/textbook.js","js/componets/wordcard.js","js/pages/vocabulary.js","js/componets/popup.js","js/componets/wordlistunit.js","js/pages/wordlist.js","js/layouts/GameLayout.js","js/componets/timer.js","js/hooks/audio.hook.js","js/blocks/gameover.js","js/blocks/sprint-block.js","assets/images/backgrounds/sprint.jpg","js/pages/game-sprint.js","assets/sounds/error.mp3","assets/sounds/correct.mp3","js/blocks/savanna-block.js","assets/images/backgrounds/savannah.jpg","js/pages/savanna.js","js/blocks/audioChallenge-block.js","assets/images/backgrounds/audio.jpg","js/pages/audioChallenge.js","js/blocks/englishforkids-block.js","assets/images/backgrounds/englishforkids.jpg","js/pages/englishforkids.js","js/pages/settings.js","js/componets/worddIftest.js","js/pages/testdif.js","js/logic/routes.js","js/hooks/auth.hook.js","js/pages/PageComponents.js","index.js"],"names":["useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","status","Error","json","data","console","log","className","href","target","src","rsLogo","alt","height","viewBox","version","width","aria-hidden","d","noop","createContext","token","userId","login","logout","isAuthenticated","name","refreshToken","message","WordContext","React","useWordContext","useContext","WordProvider","index","children","end","setEnd","hide","setHide","answer","setAnswer","count","setCount","correct","setCorrect","learnd","setLearnd","timer","setTimer","timerOut","setTimerOut","start","setStart","pagenum","setPagenum","groupnum","setGroupnum","dltwordid","crctwordid","dWordsId","settings","setSettings","showWordTransl","setShowWordTransl","showExtraTransl","setShowExtraTransl","showDifButton","setShowDifButton","showDelButton","setShowDelButton","soundVolume","setSoundVolume","sound","Audio","Provider","value","soundHandler","link","volume","onended","play","currentTime","difHndlr","word","localStorage","JSON","parse","getItem","includes","id","push","setItem","stringify","correctHndlr","deleteHndlr","indexOf","splice","removeDeleteHndlr","removeDifHndlr","progressHandler","progress","pageHandler","parseInt","useStyles","makeStyles","list","fullList","gameRoutes","route","Icon","SpaIcon","AudiotrackIcon","MenuBookIcon","TimerIcon","studyBookRoutes","TemporaryDrawer","classes","top","left","bottom","right","state","setState","wordCntx","toggleDrawer","anchor","open","event","type","key","settingsHandler","role","onClick","onKeyDown","List","map","elem","to","exact","ListItem","button","ListItemIcon","ListItemText","primary","Divider","Fragment","Button","color","Drawer","onClose","auth","AuthContext","history","useHistory","preventDefault","props","useHttp","email","password","form","setForm","changeHandler","registerHandler","Accept","alert","useEffect","MainLayout","placeholder","required","onChange","style","display","justifyContent","disabled","CircularProgress","authHandler","cards","title","textContent","image","gameImage","onlineImage","headphoneImage","studybookImage","users","nickname","avatar1","avatar2","startScreenImage","frameborder","allow","allowFullScreen","card","user","WordTest","setDWordsId","diffword","setDiffword","wrong","setWrong","borderColor","setBorderColor","testExample","textExample","split","join","clickHandler","setTimeout","bind","this","audio","hidden","wordTranslate","toUpperCase","transcription","onSubmit","Input","label","onKeyPress","autoComplete","dangerouslySetInnerHTML","__html","textMeaning","audioMeaning","textMeaningTranslate","audioExample","textExampleTranslate","Complete","TestingPage","words","setWords","load","setLoad","compl","setCompl","learned","setLearned","clickNextHandler","learnComplited","buff","every","then","catch","fontSize","next","class","TextBook","setValue","pers","setPers","dif","setDif","length","textDecoration","fontStyle","LinearProgress","variant","Word","delHndlr","delDif","useParams","Vocabulary","group","page","wordsarray","setWordsarray","wordsarrayid","setWordsarrayid","dltWordsId","setDltWordsId","difWordsId","setDifWordsId","delHandler","Array","from","x","i","Pagination","shape","size","renderItem","item","PaginationItem","component","Link","Popup","setShow","onMouseDown","stopPropagation","Wordunit","show","showPopup","Wordlist","Fab","handleFullScreen","useFullScreenHandle","fullData","setFullData","fullScreen","setFullScreen","wordsHandler","rqst","pagesHandler","wordsarr","Promise","all","accept","concat","sort","Math","random","randomWords","slice","checked","handle","backgroundImage","gameBackground","position","marginLeft","marginRight","textAlign","flexDirection","exit","enter","match","params","text","currentGroup","currentPage","array","TIME_LIMIT","COLOR_CODES","info","warning","threshold","Timer","timerInterval","timePassed","timeLft","timeLeft","setTimeLeft","circleDasharray","setCircleDasharray","remainingPathColor","setRemainingPathColor","clearInterval","setInterval","time","minutes","floor","seconds","formatTime","rawTimeFraction","calculateTimeFraction","toFixed","setPathColor","xmlns","cx","cy","r","stroke-dasharray","setSrc","playing","setPlaying","pause","addEventListener","removeEventListener","correctWords","wrongWords","score","selectedValue","setSelectedValue","toggle","setToggle","useAudio","toggleAudio","changeSrc","toggleAudioHandler","percent","round","CSSTransition","in","timeout","mountOnEnter","unmountOnExit","classNames","onExited","RadioGroup","row","Radio","inputProps","SprintBlock","correctAns","setCorrectAns","setScore","quest","setQuest","questAns","setQuestAns","ans","setAns","mult","setMult","setCorrectWordsLength","setWrongWordsLength","dis","setDis","qWord","setQword","numarr","qarr","check","num","mword1","mword2","mword3","ansHandler","backgroundColor","GameLayout","gameprops","lives","setLives","wrongWordsLength","correctWordsLength","wrongAudio","wrongAudioPath","correctAudio","correctAudioPath","setData","baseData","setBaseData","guess","setGuess","baseWord","setBaseWord","quessHandler","correctElem","find","nextpageHandler","wrongElem","newWords","updateData","guesses","baseDataUpdate","filter","shift","onEntered","addWrongWord","savannaBackground","baseUrl","setUrl","setImage","margin","guessData","setGuessData","marginTop","Settings","FormGroup","FormControlLabel","control","Switch","Slider","newvalue","aria-labelledby","WordDifTest","crct","setCrct","TestingDifPage","wrds","arr","createDifArray","storageName","PageComponents","setToken","setUserId","setName","setRefreshToken","setMessage","jwtToken","username","rToken","aMessage","removeItem","useAuth","routes","path","MainPage","render","useRoutes","basename","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1f7e0b6.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nexport default () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setLoading(true);\r\n      setError(null);\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n        });\r\n        if (!response.ok) {\r\n          setError(response.status);\r\n          throw new Error(response.status || \"Ошибка\");\r\n        }\r\n        const data = await response.json();\r\n        setLoading(false);\r\n        return data;\r\n      } catch (error) {\r\n        console.log(error);\r\n        setLoading(false);\r\n      }\r\n    },\r\n    []\r\n  );\r\n  return { loading, request, error };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo-rs-school.baf9b61d.svg\";","import React, { Component } from \"react\";\r\nimport rsLogo from \"../../assets/images/icons/logo-rs-school.svg\";\r\n\r\nexport default () => {\r\n  return (\r\n    <footer className=\"footer__wrapper\">\r\n      <div className=\"footer__content footer__list\">\r\n        <div className=\"footer__item logo-rs__wrapper\">\r\n          <a\r\n            className=\"rsschool__link\"\r\n            href=\"https://rs.school/react/\"\r\n            target=\"_blank\"\r\n          >\r\n            <img src={rsLogo} className=\"rslogo-img\" alt=\"logo-rs-school\" />\r\n          </a>\r\n        </div>\r\n\r\n        <p className=\"footer__item task-date\">2021</p>\r\n\r\n        <div className=\"footer__item authors__wrapper\">\r\n          <span className=\"octicon__wrapper\">\r\n            <svg\r\n              className=\"octicon octicon-mark-github v-align-middle\"\r\n              height=\"32\"\r\n              viewBox=\"0 0 16 16\"\r\n              version=\"1.1\"\r\n              width=\"32\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              <path d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"></path>\r\n            </svg>\r\n          </span>\r\n          <ul className=\"authors__list\">\r\n            <li className=\"authors__item\">\r\n              <a\r\n                href=\"https://github.com/chexovpert\"\r\n                className=\"authors__link\"\r\n                target=\"_blank\"\r\n              >\r\n                chexovpert\r\n              </a>\r\n            </li>\r\n            <li className=\"authors__item\">\r\n              <a\r\n                href=\"https://github.com/Vepsar\"\r\n                className=\"authors__link\"\r\n                target=\"_blank\"\r\n              >\r\n                Vepsar\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nfunction noop() {}\r\nexport default createContext({\r\n  token: null,\r\n  userId: null,\r\n  login: noop,\r\n  logout: noop,\r\n  isAuthenticated: false,\r\n  name: null,\r\n  refreshToken: null,\r\n  message: null,\r\n});\r\n","import React, { useContext, useState } from \"react\";\r\n\r\nconst WordContext = React.createContext();\r\n\r\nexport const useWordContext = () => {\r\n  return useContext(WordContext);\r\n};\r\n\r\nexport const WordProvider = ({ children }) => {\r\n  const [end, setEnd] = useState(true);\r\n  const [hide, setHide] = useState(true);\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [count, setCount] = useState(0);\r\n  const [correct, setCorrect] = useState(false);\r\n  const [learnd, setLearnd] = useState(true);\r\n  const [timer, setTimer] = useState(false);\r\n  const [timerOut, setTimerOut] = useState(false);\r\n  const [start, setStart] = useState(false);\r\n  const [pagenum, setPagenum] = useState(0);\r\n  const [groupnum, setGroupnum] = useState(0);\r\n  const [upd, setUpd] = useState(1);\r\n\r\n  let dltwordid = [];\r\n  let crctwordid = [];\r\n  let dWordsId = [];\r\n  let index;\r\n\r\n  const [settings, setSettings] = useState(false);\r\n  const [showWordTransl, setShowWordTransl] = useState(true);\r\n  const [showExtraTransl, setShowExtraTransl] = useState(true);\r\n  const [showDifButton, setShowDifButton] = useState(true);\r\n  const [showDelButton, setShowDelButton] = useState(true);\r\n  const [soundVolume, setSoundVolume] = useState(100);\r\n\r\n  const sound = new Audio();\r\n  const soundHandler = (link) => {\r\n    sound.src = `https://react-learnwords-rslang.herokuapp.com/${link}`;\r\n    sound.volume = soundVolume / 100;\r\n    sound.onended = () => {\r\n      setEnd(true);\r\n    };\r\n    if (end) {\r\n      sound.play();\r\n      setEnd(false);\r\n    }\r\n    sound.currentTime = 0;\r\n  };\r\n\r\n  function difHndlr(word) {\r\n    if (\"difWordId\" in localStorage) {\r\n      dWordsId = JSON.parse(localStorage.getItem(\"difWordId\"));\r\n      if (!dWordsId.includes(word.id)) {\r\n        dWordsId.push(word.id);\r\n        localStorage.setItem(\"difWordId\", JSON.stringify(dWordsId));\r\n      }\r\n    } else {\r\n      dWordsId.push(word.id);\r\n      localStorage.setItem(\"difWordId\", JSON.stringify(dWordsId));\r\n    }\r\n  }\r\n\r\n  function correctHndlr(word) {\r\n    if (\"correctwordid\" in localStorage) {\r\n      crctwordid = JSON.parse(localStorage.getItem(\"correctwordid\"));\r\n      if (!crctwordid.includes(word.id)) {\r\n        crctwordid.push(word.id);\r\n        localStorage.setItem(\"correctwordid\", JSON.stringify(crctwordid));\r\n      }\r\n    } else {\r\n      crctwordid.push(word.id);\r\n      localStorage.setItem(\"correctwordid\", JSON.stringify(crctwordid));\r\n    }\r\n  }\r\n\r\n  function deleteHndlr(word) {\r\n    if (\"deletewordid\" in localStorage) {\r\n      dltwordid = JSON.parse(localStorage.getItem(\"deletewordid\"));\r\n      if (!dltwordid.includes(word.id)) {\r\n        if (\"correctwordid\" in localStorage) {\r\n          crctwordid = JSON.parse(localStorage.getItem(\"correctwordid\"));\r\n          if (crctwordid.includes(word.id)) {\r\n            index = crctwordid.indexOf(word.id);\r\n            crctwordid.splice(index, 1);\r\n            localStorage.setItem(\"correctwordid\", JSON.stringify(crctwordid));\r\n          }\r\n        }\r\n        if (\"difWordId\" in localStorage) {\r\n          dWordsId = JSON.parse(localStorage.getItem(\"difWordId\"));\r\n          if (dWordsId.includes(word.id)) {\r\n            index = dWordsId.indexOf(word.id);\r\n            dWordsId.splice(index, 1);\r\n            localStorage.setItem(\"difWordId\", JSON.stringify(dWordsId));\r\n          }\r\n        }\r\n        dltwordid.push(word.id);\r\n        localStorage.setItem(\"deletewordid\", JSON.stringify(dltwordid));\r\n      }\r\n    } else {\r\n      if (\"correctwordid\" in localStorage) {\r\n        crctwordid = JSON.parse(localStorage.getItem(\"correctwordid\"));\r\n        if (crctwordid.includes(word.id)) {\r\n          index = crctwordid.indexOf(word.id);\r\n          crctwordid.splice(index, 1);\r\n          localStorage.setItem(\"correctwordid\", JSON.stringify(crctwordid));\r\n        }\r\n      }\r\n      if (\"difWordId\" in localStorage) {\r\n        dWordsId = JSON.parse(localStorage.getItem(\"difWordId\"));\r\n        if (dWordsId.includes(word.id)) {\r\n          index = dWordsId.indexOf(word.id);\r\n          dWordsId.splice(index, 1);\r\n          localStorage.setItem(\"difWordId\", JSON.stringify(dWordsId));\r\n        }\r\n      }\r\n      dltwordid.push(word.id);\r\n      localStorage.setItem(\"deletewordid\", JSON.stringify(dltwordid));\r\n    }\r\n  }\r\n\r\n  function removeDeleteHndlr(word) {\r\n    if (\"deletewordid\" in localStorage) {\r\n      dltwordid = JSON.parse(localStorage.getItem(\"deletewordid\"));\r\n      if (dltwordid.includes(word.id)) {\r\n        index = dltwordid.indexOf(word.id);\r\n        dltwordid.splice(index, 1);\r\n        localStorage.setItem(\"deletewordid\", JSON.stringify(dltwordid));\r\n      }\r\n    }\r\n  }\r\n\r\n  function removeDifHndlr(word) {\r\n    if (\"difWordId\" in localStorage) {\r\n      dWordsId = JSON.parse(localStorage.getItem(\"difWordId\"));\r\n      if (dWordsId.includes(word.id)) {\r\n        index = dWordsId.indexOf(word.id);\r\n        dWordsId.splice(index, 1);\r\n        localStorage.setItem(\"difWordId\", JSON.stringify(dWordsId));\r\n      }\r\n    }\r\n  }\r\n\r\n  function pageHandler() {\r\n    let progress = [];\r\n    if (\"progress\" in localStorage) {\r\n      progress = JSON.parse(localStorage.getItem(\"progress\"));\r\n      setGroupnum(parseInt(progress[0]));\r\n      setPagenum(parseInt(progress[1]));\r\n    } else {\r\n      progress = [0, 0];\r\n      localStorage.setItem(\"progress\", JSON.stringify(progress));\r\n    }\r\n  }\r\n\r\n  function progressHandler() {\r\n    let progress = [];\r\n    if (pagenum > 29) {\r\n      progress = [groupnum + 1, 0];\r\n    } else {\r\n      progress = [groupnum, pagenum + 1];\r\n    }\r\n    localStorage.setItem(\"progress\", JSON.stringify(progress));\r\n  }\r\n\r\n  return (\r\n    <WordContext.Provider\r\n      value={{\r\n        hide,\r\n        setHide,\r\n        answer,\r\n        setAnswer,\r\n        count,\r\n        setCount,\r\n        correct,\r\n        setCorrect,\r\n        learnd,\r\n        setLearnd,\r\n        soundHandler,\r\n        difHndlr,\r\n        correctHndlr,\r\n        deleteHndlr,\r\n        removeDeleteHndlr,\r\n        removeDifHndlr,\r\n        timer,\r\n        setTimer,\r\n        start,\r\n        setStart,\r\n        timerOut,\r\n        setTimerOut,\r\n        showWordTransl,\r\n        setShowWordTransl,\r\n        showExtraTransl,\r\n        setShowExtraTransl,\r\n        showDifButton,\r\n        setShowDifButton,\r\n        showDelButton,\r\n        setShowDelButton,\r\n        soundVolume,\r\n        setSoundVolume,\r\n        settings,\r\n        setSettings,\r\n        pagenum,\r\n        setPagenum,\r\n        groupnum,\r\n        setGroupnum,\r\n        // upd,\r\n        // setUpd,\r\n        progressHandler,\r\n        pageHandler,\r\n      }}\r\n    >\r\n      {children}\r\n    </WordContext.Provider>\r\n  );\r\n};\r\n\r\nexport default WordContext;\r\n","import React from \"react\";\r\n//import clsx from 'clsx';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport SportsEsportsIcon from \"@material-ui/icons/SportsEsports\";\r\nimport TimerIcon from \"@material-ui/icons/Timer\";\r\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\r\nimport AudiotrackIcon from \"@material-ui/icons/Audiotrack\";\r\nimport SpaIcon from \"@material-ui/icons/Spa\";\r\n//import SportsEsportsIcon from '@material-ui/icons/SportsEsports';\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { Link, Route, useHistory } from \"react-router-dom\";\r\nimport { useWordContext } from \"../context/WordContext\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n});\r\nconst gameRoutes = [\r\n  {\r\n    name: \"Savannah\",\r\n    route: \"/games/savanna\",\r\n    Icon: SpaIcon\r\n  },\r\n  {\r\n    name: \"Audio Challenge\",\r\n    route: \"/games/audio\",\r\n    Icon: AudiotrackIcon\r\n  },\r\n  {\r\n    name: \"English for Kids\",\r\n    route: \"/games/forkids\",\r\n    Icon: MenuBookIcon\r\n  },\r\n  {\r\n    name: \"Sprint\",\r\n    route: \"/games/sprint\",\r\n    Icon: TimerIcon\r\n  },\r\n];\r\nconst studyBookRoutes = [\r\n  {\r\n    name: \"Главная страница\",\r\n    route: \"/\",\r\n  },\r\n  {\r\n    name: \"Учебник\",\r\n    route: \"/classbook\",\r\n  },\r\n\r\n  {\r\n    name: \"Словарь\",\r\n    route: \"/vocabulary/learned/1/1\",\r\n  },\r\n];\r\nexport default function TemporaryDrawer() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n  const wordCntx = useWordContext();\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n  const settingsHandler = () => {\r\n    wordCntx.setSettings(true);\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {studyBookRoutes.map((elem, index) => (\r\n          <Link to={elem.route} exact>\r\n            <ListItem button key={elem.name}>\r\n              <ListItemIcon>\r\n                <InboxIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={elem.name} />\r\n            </ListItem>\r\n          </Link>\r\n        ))}\r\n        <ListItem button key={\"elem.name\"} onClick={settingsHandler}>\r\n          <ListItemIcon>\r\n            <SettingsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary={\"Настройки\"} />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {gameRoutes.map((elem, index) => (\r\n          <Link to={elem.route} exact>\r\n            <ListItem button key={elem.name}>\r\n              <ListItemIcon>\r\n                <elem.Icon></elem.Icon>\r\n              </ListItemIcon>\r\n              <ListItemText primary={elem.name} />\r\n            </ListItem>\r\n          </Link>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {[\"left\"].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button onClick={toggleDrawer(anchor, true)}>\r\n            <MenuIcon color=\"secondary\" />\r\n          </Button>\r\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\r\n            {list(anchor)}\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../context/AuthContext\";\r\nimport Burger from \"./burger\";\r\n//import useAuth from \"../hooks/auth.hook\";\r\n\r\nexport default () => {\r\n  const auth = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const [show, setShow] = useState(false);\r\n  const isAuthenticated = !!auth.token;\r\n  const logoutHandler = (event) => {\r\n    event.preventDefault();\r\n    auth.logout();\r\n    history.push(\"/\");\r\n  };\r\n  if (isAuthenticated) {\r\n    return (\r\n      <div className=\"header\">\r\n        {/* <nav className={show ? \"header__nav show\" : \"header__nav\"}>\r\n        <ul className=\"header__navlist\">\r\n          <li className=\"header__navlist-link\">\r\n            <Link>Словарь</Link>\r\n          </li>\r\n          <li className=\"header__navlist-link\">\r\n            <Link to={\"/games/forkids\"}>Учебник</Link>\r\n          </li>\r\n          <li className=\"header__navlist-link\">\r\n            <Link to={\"/games/savanna\"}>Игры</Link>\r\n          </li>\r\n          <li className=\"header__navlist-link\">\r\n            <Link to=\"/games/audio\"> Что-то</Link>\r\n          </li>\r\n        </ul>\r\n        <div className=\"header__burger-button\" onClick={handleClick}>\r\n          Click\r\n        </div>\r\n      </nav> */}\r\n        <div>\r\n          <Burger></Burger>\r\n        </div>\r\n        <div className=\"header__left\">\r\n          <Link to=\"/\" className=\"header__logo\">\r\n            RsLang\r\n          </Link>\r\n        </div>\r\n        <div className=\"header__right\">\r\n          <p>{auth.name}</p>\r\n          <Link to=\"/\" className=\"header__link login\" onClick={logoutHandler}>\r\n            Выйти\r\n          </Link>\r\n\r\n          {/* <div className=\"header__burger-button\" onClick={handleClick}>\r\n          Click\r\n        </div> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"header\">\r\n        {/* <nav className={show ? \"header__nav show\" : \"header__nav\"}>\r\n          <ul className=\"header__navlist\">\r\n            <li className=\"header__navlist-link\">\r\n              <Link to={\"/vocabulary/learned\"}>Словарь</Link>\r\n            </li>\r\n            <li className=\"header__navlist-link\">\r\n              <Link to=\"/classbook\">Учебник</Link>\r\n            </li>\r\n            <li className=\"header__navlist-link\">\r\n              <Link to={\"/games/savanna\"}>Игры</Link>\r\n            </li>\r\n            <li className=\"header__navlist-link\">\r\n              <Link>Что-то</Link>\r\n            </li>\r\n          </ul>\r\n          <div className=\"header__burger-button\" onClick={handleClick}>\r\n            Click\r\n          </div>\r\n        </nav> */}\r\n        <div>\r\n          <Burger></Burger>\r\n        </div>\r\n        <div className=\"header__left\">\r\n          <Link to=\"/\" className=\"header__logo\">\r\n            RsLang\r\n          </Link>\r\n        </div>\r\n        <div className=\"header__right\">\r\n          <Link to=\"/register\" className=\"header__link register\">\r\n            Зарегестрироваться\r\n          </Link>\r\n          <Link to=\"/login\" className=\"header__link login\">\r\n            Войти\r\n          </Link>\r\n          {/* <div className=\"header__burger-button\" onClick={handleClick}>\r\n            Click\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport useHttp from \"../hooks/http.hook\";\r\nimport Footer from \"../blocks/footer\";\r\nimport HeaderAuthorized from \"../blocks/header-autorized\";\r\nimport Header from \"../blocks/header\";\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div className=\"app-wrapper\">\r\n      <div className=\"content-wrapper\">\r\n        <HeaderAuthorized />\r\n        {props.children}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport useHttp from \"../hooks/http.hook\";\r\nimport MainLayout from \"../layouts/MainLayout\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nexport default () => {\r\n  const { loading, error, request } = useHttp();\r\n  const [form, setForm] = useState({ name: \"\", email: \"\", password: \"\" });\r\n  const changeHandler = (event) => {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n    //console.log(event.target.name);\r\n    //console.log(event.target.value);\r\n  };\r\n  const registerHandler = async () => {\r\n    try {\r\n      const data = await request(\r\n        \"https://react-learnwords-rslang.herokuapp.com/users\",\r\n        \"POST\",\r\n        JSON.stringify({ ...form }),\r\n        { Accept: \"application/json\", \"Content-Type\": \"application/json\" }\r\n      );\r\n      if(data) {\r\n        alert('успешная регистрация')\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if(error===422){\r\n      alert(\"Неправильное имя или пароль\")\r\n      }\r\n    if(error===417){\r\n      alert(\"Пользователь с данным email уже существует\")\r\n      }\r\n  }, [error]);\r\n  return (\r\n    <MainLayout>\r\n      <div className=\"registration\">\r\n        <h1 className=\"registration-title\">Регистрация</h1>\r\n        <div>\r\n          <div className=\"registration__input-field\">\r\n            <label className=\"registration__input-title\">Email:</label>\r\n            <input\r\n              id=\"remail\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"введите email\"\r\n              //value=\"\"\r\n              required\r\n              className=\"registration__input-field-input\"\r\n              onChange={changeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"registration__input-field\">\r\n            <label className=\"registration__input-title\">Имя:</label>\r\n            <input\r\n              id=\"rname\"\r\n              name=\"name\"\r\n              type=\"name\"\r\n              placeholder=\"введите имя\"\r\n              //value=\"\"\r\n              required\r\n              className=\"registration__input-field-input\"\r\n              onChange={changeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"registration__input-field\">\r\n            <label className=\"registration__input-title\">Пароль:</label>\r\n            <input\r\n              id=\"rpassword\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"введите пароль\"\r\n              //value=\"\"\r\n              onChange={changeHandler}\r\n              required\r\n              className=\"registration__input-field-input\"\r\n            />\r\n          </div>\r\n          {/* <div className=\"registration__input-field\">\r\n          <label className=\"registration__input-title\">Повторить пароль:</label>\r\n          <input\r\n            id=\"confirm\"\r\n            name=\"confirm\"\r\n            type=\"password\"\r\n            placeholder=\"введите пароль еще раз\"\r\n            //value=\"\"\r\n            onChange={changeHandler}\r\n            required\r\n            className=\"registration__input-field-input\"\r\n          />\r\n        </div> */}\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              width: \"100%\",\r\n              height: \"60px\",\r\n            }}\r\n          >\r\n            {!loading && (\r\n              <button\r\n                onClick={registerHandler}\r\n                //type=\"submit\"\r\n                value=\"Зарегестрироваться\"\r\n                className=\"registration__button-submit\"\r\n                disabled={loading}\r\n              >\r\n                {loading ? \"Загрузка\" : \"Регистрация\"}\r\n              </button>\r\n            )}\r\n            {loading && <CircularProgress></CircularProgress>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </MainLayout>\r\n  );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport AuthContext from \"../context/AuthContext\";\r\nimport useHttp from \"../hooks/http.hook\";\r\nimport MainLayout from \"../layouts/MainLayout\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nexport default () => {\r\n  const auth = useContext(AuthContext);\r\n  const { loading, error, request } = useHttp();\r\n  const [form, setForm] = useState({ email: \"\", password: \"\" });\r\n  const changeHandler = (event) => {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n  };\r\n  const authHandler = async () => {\r\n    try {\r\n      const data = await request(\r\n        \"https://react-learnwords-rslang.herokuapp.com/signin\",\r\n        \"POST\",\r\n        JSON.stringify({ ...form }),\r\n        { Accept: \"application/json\", \"Content-Type\": \"application/json\" }\r\n      );\r\n      //console.log(data);\r\n      if(data) {\r\n      auth.login(\r\n        data.token,\r\n        data.userId,\r\n        data.name,\r\n        data.refreshToken,\r\n        data.message\r\n      );\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if(error===403){\r\n    alert(\"Неправильный пароль\")\r\n    }\r\n    if(error===404){\r\n    alert(\"Пользователь не найден\")\r\n    }\r\n  }, [error]);\r\n  return (\r\n    <MainLayout>\r\n      <div className=\"registration\">\r\n        <h1 className=\"registration-title\">Войти</h1>\r\n        <div>\r\n          <div className=\"registration__input-field\">\r\n            <label className=\"registration__input-title\">Email:</label>\r\n            <input\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"введите email\"\r\n              onChange={changeHandler}\r\n              required\r\n              className=\"registration__input-field-input\"\r\n            />\r\n          </div>\r\n          <div className=\"registration__input-field\">\r\n            <label className=\"registration__input-title\">Пароль:</label>\r\n            <input\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"введите пароль\"\r\n              onChange={changeHandler}\r\n              required\r\n              className=\"registration__input-field-input\"\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              width: \"100%\",\r\n              height: \"60px\",\r\n            }}\r\n          >\r\n            {!loading && (\r\n              <button\r\n                //type=\"submit\"\r\n                //value=\"Войти\"\r\n                className=\"registration__button-submit\"\r\n                onClick={authHandler}\r\n                disabled={loading}\r\n              >\r\n                {loading ? \"Загрузка\" : \"Войти\"}\r\n              </button>\r\n            )}\r\n            {loading && <CircularProgress></CircularProgress>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </MainLayout>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/mainpageimage.0691c32f.png\";","export default __webpack_public_path__ + \"static/media/games.81ef0a40.png\";","export default __webpack_public_path__ + \"static/media/online.e041b85e.png\";","export default __webpack_public_path__ + \"static/media/headphone.9c39c0a7.png\";","export default __webpack_public_path__ + \"static/media/studybook.e0b3b122.png\";","export default __webpack_public_path__ + \"static/media/avatar1.0bd3359b.png\";","export default __webpack_public_path__ + \"static/media/avatar2.cd8ea820.png\";","import { CardActions } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport startScreenImage from \"../../assets/images/images/mainpageimage.png\";\r\nimport gameImage from \"../../assets/images/images/games.png\";\r\nimport onlineImage from \"../../assets/images/images/online.png\";\r\nimport headphoneImage from \"../../assets/images/images/headphone.png\";\r\nimport studybookImage from \"../../assets/images/images/studybook.png\";\r\nimport avatar1 from \"../../assets/images/images/avatar1.png\";\r\nimport avatar2 from \"../../assets/images/images/avatar2.png\";\r\n\r\nimport MainLayout from \"../layouts/MainLayout\";\r\n\r\nconst cards = [\r\n  {\r\n    title: \"Игры\",\r\n    textContent:\r\n      \"Изучать новое интереснее во время игры. Поэтому мы подготовили 4 увлекательных красочных игр, чтобы учитьанглийский было веселее.\",\r\n    image: gameImage,\r\n  },\r\n  {\r\n    title: \"Онлайн доступ\",\r\n    textContent:\r\n      \"В отличии от оффлайн курсов наши игры и тренировки доступны всегда. Занимайтесь когда вам удобно, ни от чего не завися.\",\r\n    image: onlineImage,\r\n  },\r\n  {\r\n    title: \"Произношение\",\r\n    textContent:\r\n      \"Слушай и тренируй свое произношение. Благодаря нашим играм и аудиофайлам вы сможете полностью избавиться от своего акцента.\",\r\n    image: headphoneImage,\r\n  },\r\n  {\r\n    title: \"Учебник\",\r\n    textContent:\r\n      \"Благодаря нашему электронному учебнику всегда можно вспомнить сложное или выучить новое слово, кроме того можно также отмечать и удалить слова.\",\r\n    image: studybookImage,\r\n  },\r\n];\r\nconst users = [\r\n  {\r\n    nickname: \"chexovpert\",\r\n    role: \"Разработчик\",\r\n    textContent:\r\n      \"Отвечает за разработку мини-игр Саванна, Аудиовызов, English for kids. Создатель главной страницы, бургер-меню, формы для логина и авторизации и бэк.\",\r\n    image: avatar1,\r\n    link: \"https://github.com/chexovpert\",\r\n  },\r\n  {\r\n    nickname: \"vepsar\",\r\n    role: \"Разработчик\",\r\n    textContent:\r\n      \"Отвечает за разработку мини-игры Спринт. Разработал электронный учебник с настройками, списком слов и словарём\",\r\n    image: avatar2,\r\n    link: \"https://github.com/Vepsar\",\r\n  },\r\n];\r\n\r\nexport default () => {\r\n  return (\r\n    <MainLayout>\r\n      <div className=\"mainPage\">\r\n        <div className=\"mainPage_startScreen\">\r\n          <div className=\"mainPage_startScreen_textContent\">\r\n            <h1>Учите новые слова каждый день с RSlang</h1>\r\n            <p>\r\n              Уникальное приложение для изучения английского. Увлекательные игры\r\n              для тренировки слов и метод интервального повторения для\r\n              запоминания слов навсегда.\r\n            </p>\r\n            <Link to=\"/classbook\" className=\"header__link login\">\r\n              Начать обучение\r\n            </Link>\r\n          </div>\r\n          <div>\r\n            <img\r\n              className=\"mainPage_startScreen_image\"\r\n              src={startScreenImage}\r\n            />\r\n          </div>\r\n        </div>\r\n        <section className=\"mainPage__video\">\r\n          <h2>Видео</h2>\r\n          <div\r\n            className=\"mainPage__video_container\"\r\n            // style={{ backgroundImage: `url(${laptop})` }}\r\n          >\r\n            <iframe\r\n              // width=\"560\"\r\n              // height=\"315\"\r\n              src=\"https://www.youtube.com/embed/IJKuD_nGlT8\"\r\n              title=\"YouTube video player\"\r\n              frameborder=\"0\"\r\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; allowfullscreen\"\r\n              allowFullScreen\r\n            ></iframe>\r\n          </div>\r\n        </section>\r\n        <section className=\"mainPage__features_wrapper\">\r\n          <div className=\"mainPage_features\">\r\n            <h2>Особенности</h2>\r\n            <div className=\"mainPage_features_card-container\">\r\n              {cards.map((card) => {\r\n                return (\r\n                  <div className=\"mainPage_features_card\">\r\n                    <h3>{card.title}</h3>\r\n                    <div className=\"mainPage_features_card-content\">\r\n                      <div className=\"mainPage_features_card-text\">\r\n                        <p>{card.textContent}</p>\r\n                      </div>\r\n                      <div>\r\n                        <img\r\n                          className=\"mainPage_features_card-image\"\r\n                          src={card.image}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className=\"mainPage__team\">\r\n          <h2>О команде</h2>\r\n          <div\r\n            className=\"mainPage__team__wrapper\"\r\n            // style={{ backgroundImage: `url(${laptop})` }}\r\n          >\r\n            {users.map((user) => {\r\n              return (\r\n                <div className=\"mainPage__team__card\">\r\n                  <img\r\n                    className=\"mainPage__team__card-image\"\r\n                    src={user.image}\r\n                  />\r\n                  <div className=\"mainPage__team__card_description\">\r\n                    <h3>{user.nickname}</h3>\r\n                    <h5>{user.role}</h5>\r\n                    <p>{user.textContent}</p>\r\n                  </div>\r\n                  <a href={user.link}>\r\n                    <span className=\"mainPage__team__card-link\">\r\n                      <svg\r\n                        className=\"octicon octicon-mark-github v-align-middle\"\r\n                        height=\"32\"\r\n                        viewBox=\"0 0 16 16\"\r\n                        version=\"1.1\"\r\n                        width=\"32\"\r\n                        aria-hidden=\"true\"\r\n                      >\r\n                        <path d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"></path>\r\n                      </svg>\r\n                    </span>\r\n                  </a>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </MainLayout>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport \"../../styles/components/wordtest.scss\";\r\nimport { useWordContext } from \"../context/WordContext\";\r\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUp\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nexport default function WordTest({ word }) {\r\n  const wordCntx = useWordContext();\r\n  const [dWordsId, setDWordsId] = useState([]);\r\n  const [diffword, setDiffword] = useState(false);\r\n  const [wrong, setWrong] = useState(false);\r\n  const [borderColor, setBorderColor] = useState(\"rgb(77, 77, 77)\");\r\n  let crctword = [];\r\n  useEffect(() => {\r\n    wordCntx.setLearnd(true);\r\n    if (\"correctwordid\" in localStorage) {\r\n      crctword = JSON.parse(localStorage.getItem(\"correctwordid\"));\r\n      if (crctword.includes(word.id)) {\r\n        wordCntx.setLearnd(false);\r\n      }\r\n    }\r\n    if (\"difWordId\" in localStorage) {\r\n      setDWordsId(JSON.parse(localStorage.getItem(\"difWordId\")));\r\n    }\r\n  }, [word]);\r\n\r\n  useEffect(() => {\r\n    setDiffword(false);\r\n    if (dWordsId.includes(word.id)) {\r\n      setDiffword(true);\r\n    }\r\n  }, [dWordsId]);\r\n\r\n  function difClickHandler() {\r\n    if (diffword) {\r\n      wordCntx.removeDifHndlr(word);\r\n      setDWordsId(JSON.parse(localStorage.getItem(\"difWordId\")));\r\n    } else {\r\n      wordCntx.difHndlr(word);\r\n      setDWordsId(JSON.parse(localStorage.getItem(\"difWordId\")));\r\n    }\r\n  }\r\n\r\n  let testExample = word.textExample\r\n    .split(\" \")\r\n    .map((elem) => {\r\n      return elem.includes(\"<b>\") ? (elem = \"________\") : elem;\r\n    })\r\n    .join(\" \");\r\n\r\n  function clickHandler() {\r\n    if (wordCntx.answer == word.word) {\r\n      wordCntx.setLearnd(false);\r\n      wordCntx.setCorrect(true);\r\n      wordCntx.correctHndlr(word);\r\n      setWrong(false);\r\n      setBorderColor(\"green\");\r\n      setTimeout(() => {\r\n        setBorderColor(\"rgb(77, 77, 77)\");\r\n      }, 2000);\r\n    } else {\r\n      setWrong(true);\r\n      setBorderColor(\"red\");\r\n      setTimeout(() => {\r\n        setWrong(false);\r\n        setBorderColor(\"rgb(77, 77, 77)\");\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"wordtest__cont\">\r\n      <div className=\"wordtest__container\">\r\n        <img\r\n          className=\"wordtest__image\"\r\n          src={`https://react-learnwords-rslang.herokuapp.com/${word.image}`}\r\n          alt={`word_image.jpg`}\r\n          style={{ borderColor: borderColor }}\r\n        />\r\n        <div className=\"wordtest__content\">\r\n          <div className=\"wordtest__word\" style={{ display: `${wordCntx.learnd ? \"none\" : \"flex\"}` }}>\r\n            <h1>{word.word}</h1>\r\n            <VolumeUpIcon onClick={wordCntx.soundHandler.bind(this, word.audio)} title=\"Прослушать произношение\" />\r\n          </div>\r\n\r\n          <h1 className=\"wordtest__translate\" hidden={!wordCntx.learnd}>\r\n            {word.wordTranslate.toUpperCase()}\r\n          </h1>\r\n          <div className=\"wordtest__translate\" hidden={wordCntx.learnd || !wordCntx.showWordTransl}>\r\n            Перевод: {word.wordTranslate}\r\n          </div>\r\n          <div className=\"wordtest__transcript\" hidden={wordCntx.learnd}>\r\n            Транскрипция: {word.transcription}\r\n          </div>\r\n          <br />\r\n          <div style={{ display: `${wordCntx.learnd ? \"flex\" : \"none\"}` }}>\r\n            <form\r\n              onSubmit={(event) => {\r\n                event.preventDefault();\r\n                clickHandler();\r\n              }}\r\n            >\r\n              <Input\r\n                id=\"standard-basic\"\r\n                type=\"text\"\r\n                label=\"Введите слово\"\r\n                onKeyPress={(event) => (event.key === \"Enter\" ? clickHandler.bind(this) : null)}\r\n                onChange={(event) => wordCntx.setAnswer(event.target.value)}\r\n                value={wordCntx.answer}\r\n                autoComplete=\"off\"\r\n                color={wrong ? \"secondary\" : \"primary\"}\r\n              />\r\n            </form>\r\n            <div className=\"wordtest__agree\" onClick={clickHandler}>\r\n              <CheckIcon />\r\n            </div>\r\n            <div className=\"wordtest__clean\" onClick={() => wordCntx.setAnswer(\"\")}>\r\n              <ClearIcon />\r\n            </div>\r\n          </div>\r\n          <br style={{ display: `${wordCntx.learnd ? \"flex\" : \"none\"}` }} />\r\n          <div className=\"wordtest__meaning\" style={{ display: `${wordCntx.learnd ? \"none\" : \"flex\"}` }}>\r\n            <div dangerouslySetInnerHTML={{ __html: word.textMeaning }} />\r\n            <VolumeUpIcon onClick={wordCntx.soundHandler.bind(this, word.audioMeaning)} title=\"Прослушать произношение\" />\r\n          </div>\r\n          <div\r\n            className=\"word__meaning-transl\"\r\n            style={{ display: `${wordCntx.learnd || !wordCntx.showExtraTransl ? \"none\" : \"flex\"}` }}\r\n          >\r\n            {word.textMeaningTranslate}{\" \"}\r\n          </div>\r\n          <br />\r\n          <div className=\"wordtest__example\" style={{ display: `${wordCntx.learnd ? \"none\" : \"flex\"}` }}>\r\n            <div dangerouslySetInnerHTML={{ __html: word.textExample }} />\r\n            <VolumeUpIcon onClick={wordCntx.soundHandler.bind(this, word.audioExample)} title=\"Прослушать произношение\" />\r\n          </div>\r\n\r\n          <div className=\"wordtest__meaning-transl\" hidden={!wordCntx.learnd}>\r\n            {testExample}\r\n          </div>\r\n          <div className=\"word__example-transl\" hidden={!wordCntx.showExtraTransl}>\r\n            {word.textExampleTranslate}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"wordtest__buttons\" hidden={!wordCntx.showDifButton}>\r\n        {wordCntx.showDifButton ? (\r\n          <button onClick={difClickHandler}>{diffword ? \"Убрать из сложных\" : \"Отметить как сложное \"}</button>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport \"../../styles/components/taskComplete.scss\";\r\n\r\nexport default function Complete() {\r\n  return (\r\n    <Link to={\"/classbook\"}>\r\n      <div className=\"compl__container\">\r\n        <div className=\"compl__content\">\r\n          <h1>Поздравляем! Вы прошли этап!</h1>\r\n          <p>На сегодня вы выполнили задание.</p>\r\n          <p>Можете повторить другие слова, поиграть в игры или же продолжить обучение</p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport \"../../styles/pages/testpage.scss\";\r\nimport WordTest from \"../componets/wordtest\";\r\nimport { useWordContext } from \"../context/WordContext\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport Complete from \"../componets/taskcompl\";\r\nimport MainLayout from \"../layouts/MainLayout\";\r\n\r\nexport default function TestingPage() {\r\n  const [words, setWords] = useState([]);\r\n  const [load, setLoad] = useState(false);\r\n  const [compl, setCompl] = useState(false);\r\n  const wordCntx = useWordContext();\r\n  const [learned, setLearned] = useState([]);\r\n\r\n  useEffect(() => {\r\n    wordCntx.setCount(0);\r\n    wordCntx.pageHandler();\r\n    setCompl(false);\r\n    fetch(`https://react-learnwords-rslang.herokuapp.com/words?group=${wordCntx.groupnum}&page=${wordCntx.pagenum}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"HTTP error \" + response.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        data && setWords(data);\r\n        setLoad(true);\r\n      })\r\n      .catch((error) => console.error(\"country countries loader\", error));\r\n  }, [wordCntx.pagenum]);\r\n\r\n  function clickNextHandler() {\r\n    learnComplited();\r\n    wordCntx.setCount(wordCntx.count === 19 ? 0 : wordCntx.count + 1);\r\n    wordCntx.setAnswer(\"\");\r\n    wordCntx.setLearnd(true);\r\n    if (wordCntx.correct) {\r\n      wordCntx.setCorrect(false);\r\n      wordCntx.setHide(true);\r\n    }\r\n  }\r\n\r\n  function clickPrevHandler() {\r\n    learnComplited();\r\n    wordCntx.setCount(wordCntx.count === 0 ? 19 : wordCntx.count - 1);\r\n    wordCntx.setAnswer(\"\");\r\n    wordCntx.setLearnd(true);\r\n  }\r\n\r\n  function learnComplited() {\r\n    if (\"correctwordid\" in localStorage) {\r\n      setLearned(JSON.parse(localStorage.getItem(\"correctwordid\")));\r\n    }\r\n    let buff = words.every((elem) => {\r\n      return learned.includes(elem.id);\r\n    });\r\n    if (buff) {\r\n      wordCntx.progressHandler();\r\n      setCompl(buff);\r\n    }\r\n  }\r\n\r\n  if (load) {\r\n    return (\r\n      <MainLayout>\r\n        <div className=\"testpage__cont\">\r\n          <div className=\"testpage__container\">\r\n            {compl ? <Complete /> : null}\r\n            <div className=\"testpage__arrow\" onClick={clickPrevHandler}>\r\n              <ArrowBackIosIcon fontSize=\"large\" />\r\n            </div>\r\n            <div className=\"testpage__word\">{<WordTest word={words[wordCntx.count]} next={clickNextHandler} />}</div>\r\n            <div className=\"testpage__arrow\" onClick={clickNextHandler}>\r\n              <ArrowForwardIosIcon fontSize=\"large\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </MainLayout>\r\n    );\r\n  } else {\r\n    return (\r\n      <MainLayout>\r\n        <div className=\"testpage__cont\">\r\n          <div className=\"testpage__load\">\r\n            <div id=\"fountainG\">\r\n              <div id=\"fountainG_1\" class=\"fountainG\"></div>\r\n              <div id=\"fountainG_2\" class=\"fountainG\"></div>\r\n              <div id=\"fountainG_3\" class=\"fountainG\"></div>\r\n              <div id=\"fountainG_4\" class=\"fountainG\"></div>\r\n              <div id=\"fountainG_5\" class=\"fountainG\"></div>\r\n              <div id=\"fountainG_6\" class=\"fountainG\"></div>\r\n              <div id=\"fountainG_7\" class=\"fountainG\"></div>\r\n              <div id=\"fountainG_8\" class=\"fountainG\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </MainLayout>\r\n    );\r\n  }\r\n}\r\n","import { LinearProgress } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../styles/blocks/textbook.scss\";\r\nimport MainLayout from \"../layouts/MainLayout\";\r\n\r\nexport default function TextBook() {\r\n  const [value, setValue] = useState(0);\r\n  const [pers, setPers] = useState(2);\r\n  const [dif, setDif] = useState(true);\r\n  useEffect(() => {\r\n    if (\"correctwordid\" in localStorage) {\r\n      setValue(JSON.parse(localStorage.getItem(\"correctwordid\")).length);\r\n      setPers(value / 36);\r\n    } else {\r\n      setValue(0);\r\n    }\r\n    if (\"difWordId\" in localStorage) {\r\n      let dWordsId = JSON.parse(localStorage.getItem(\"difWordId\"));\r\n      if (dWordsId.length < 20) {\r\n        setDif(false);\r\n      }\r\n    } else {\r\n      setDif(false)\r\n    }\r\n  }, []);\r\n  return (\r\n    <MainLayout>\r\n      <div className=\"textbook\">\r\n        <div className=\"textbook__logo\">\r\n          <h1>{`Учебник RSLang`}</h1>\r\n          <p>{`Добро пожаловать на страницу учебника`}</p>\r\n          <p>{`Здесь вы можете изучать новые слова или же повторить уже изученные или сложные слова`}</p>\r\n        </div>\r\n\r\n        <div className=\"textbook__learn\">\r\n          <Link to=\"/testing\">\r\n            <div className=\"textbook__cell\">\r\n              <h3 style={{ color: \"rgb(165, 0, 0)\" }}>MOST IMPOTANT</h3>\r\n              <p>{\"Изучить слова на сегодня\"}</p>\r\n            </div>\r\n          </Link>\r\n          <Link to={\"/wordlist/1/1\"}>\r\n            <div className=\"textbook__cell\">\r\n              <h4 style={{ color: \"green\", textDecoration: \"underline\" }}>К сведению</h4>\r\n              <p>{\"Посмотреть весь список слов\"}</p>\r\n            </div>\r\n          </Link>\r\n          <Link to={dif ? \"/testingdif\" : null}>\r\n            <div className=\"textbook__cell\">\r\n              <h4 style={{ color: \"blue\", textDecoration: \"dash ed\" }}>НАПОМИНАНИЕ!!!</h4>\r\n              <p>{\"Повторить сложные слова\"}</p>\r\n              {!dif ? <span id='mark'style={{  fontStyle: \"italic\" }}>пока мало сложных</span> : null}\r\n            </div>\r\n          </Link>\r\n        </div>\r\n        <div className=\"textbook__statistic\">\r\n          <h3>Выучено всего слов</h3>\r\n          <p>{`Изучено  ${value} из 3600 слов`}</p>\r\n          <div className=\"textbook__linear\">\r\n            <LinearProgress variant=\"determinate\" value={pers} />\r\n            <br/>\r\n          </div>\r\n          {/* <br/> */}\r\n        </div>\r\n      </div>\r\n    </MainLayout>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { useWordContext } from \"../context/WordContext\";\r\nimport \"../../styles/components/wordcard.scss\";\r\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUp\";\r\nimport { useParams } from \"react-router\";\r\n\r\nexport default function Word({ word, delHndlr, delDif }) {\r\n  const wordCntx = useWordContext();\r\n  const [dWordsId, setDWordsId] = useState([]);\r\n  const [diffword, setDiffword] = useState(false);\r\n  const { type } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (\"difWordId\" in localStorage) {\r\n      setDWordsId(JSON.parse(localStorage.getItem(\"difWordId\")));\r\n    }\r\n  }, [word]);\r\n\r\n  useEffect(() => {\r\n    setDiffword(false);\r\n    if (dWordsId.includes(word.id)) {\r\n      setDiffword(true);\r\n    }\r\n  }, [dWordsId]);\r\n\r\n  function clickHandler() {\r\n    if (type !== \"difficult\") {\r\n      if (diffword) {\r\n        wordCntx.removeDifHndlr(word);\r\n        setDWordsId(JSON.parse(localStorage.getItem(\"difWordId\")));\r\n      } else {\r\n        wordCntx.difHndlr(word);\r\n        setDWordsId(JSON.parse(localStorage.getItem(\"difWordId\")));\r\n      }\r\n    } else {\r\n      wordCntx.removeDifHndlr(word);\r\n      delDif(word);\r\n      setDWordsId(JSON.parse(localStorage.getItem(\"difWordId\")));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"word__container\">\r\n      <div className=\"word__content\">\r\n        <div className=\"word__word\">\r\n          <h1>{word.word}</h1>\r\n          <VolumeUpIcon\r\n            className=\"word__icon\"\r\n            onClick={wordCntx.soundHandler.bind(this, word.audio)}\r\n            title=\"Прослушать произношение\"\r\n          />\r\n        </div>\r\n        {wordCntx.showWordTransl ? <div className=\"word__translate\">Перевод: {word.wordTranslate}</div> : null}\r\n        <div className=\"word__transcript\">Транскрипция: {word.transcription}</div>\r\n        <div className=\"word__meaning_container\">\r\n          <h3>Значение слова</h3>\r\n          <div className=\"word__meaning\">\r\n            <div dangerouslySetInnerHTML={{ __html: word.textMeaning }} />\r\n            <VolumeUpIcon\r\n              className=\"word__icon\"\r\n              onClick={wordCntx.soundHandler.bind(this, word.audioMeaning)}\r\n              title=\"Прослушать произношение\"\r\n            />\r\n          </div>\r\n          {wordCntx.showExtraTransl ? <div className=\"word__meaning-transl\">{word.textMeaningTranslate}</div> : null}\r\n        </div>\r\n        <div className=\"word__example_container\">\r\n          <h3>Пример слова в предложении</h3>\r\n          <div className=\"word__example\">\r\n            <div dangerouslySetInnerHTML={{ __html: word.textExample }} />\r\n            <VolumeUpIcon\r\n              className=\"word__icon\"\r\n              onClick={wordCntx.soundHandler.bind(this, word.audioExample)}\r\n              title=\"Прослушать произношение\"\r\n            />\r\n          </div>\r\n          {wordCntx.showExtraTransl ? <div className=\"word__example-transl\">{word.textExampleTranslate}</div> : null}\r\n        </div>\r\n      </div>\r\n      <div className=\"word__buttons\">\r\n        {wordCntx.showDifButton ? (\r\n          <button className=\"registration__button-submit\" onClick={clickHandler}>\r\n            {diffword ? \"Убрать из сложных\" : \"Сложное слово\"}\r\n          </button>\r\n        ) : null}\r\n        {wordCntx.showDelButton ? (\r\n          <button className=\"registration__button-submit\" onClick={delHndlr.bind(this, word)}>\r\n            {type === \"deleted\" ? \"Убрать из удаленных\" : \"Удалить слово\"}\r\n          </button>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"../../styles/pages/vocabulary.scss\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Word from \"../componets/wordcard\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { Pagination, PaginationItem } from \"@material-ui/lab\";\r\nimport { useWordContext } from \"../context/WordContext\";\r\nimport MainLayout from \"../layouts/MainLayout\";\r\n\r\nexport default function Vocabulary() {\r\n  const { type } = useParams();\r\n  const { group } = useParams();\r\n  const { page } = useParams();\r\n  const [wordsarray, setWordsarray] = useState([]);\r\n  const [wordsarrayid, setWordsarrayid] = useState([]);\r\n  const [load, setLoad] = useState(false);\r\n  const [hide, setHide] = useState(false);\r\n  const wordCntx = useWordContext();\r\n  const [dltWordsId, setDltWordsId] = useState([]);\r\n  const [difWordsId, setDifWordsId] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`https://react-learnwords-rslang.herokuapp.com/words?group=${group - 1}&page=${page - 1}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"HTTP error \" + response.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        data && setWordsarray(data);\r\n        setHide(false);\r\n      })\r\n      .catch((error) => console.error(\"country countries loader\", error));\r\n\r\n    if (type === \"difficult\") {\r\n      if (\"difWordId\" in localStorage) {\r\n        setWordsarrayid(JSON.parse(localStorage.getItem(\"difWordId\")));\r\n        setDifWordsId(JSON.parse(localStorage.getItem(\"difWordId\")));\r\n        setDltWordsId(JSON.parse(localStorage.getItem(\"deletewordid\")));\r\n      } else {\r\n        setWordsarrayid([]);\r\n      }\r\n    }\r\n    if (type === \"learned\") {\r\n      if (\"correctwordid\" in localStorage) {\r\n        setWordsarrayid(JSON.parse(localStorage.getItem(\"correctwordid\")));\r\n      } else {\r\n        setWordsarrayid([]);\r\n      }\r\n      if (\"difWordId\" in localStorage) {\r\n      } else {\r\n        localStorage.setItem(\"difWordId\", JSON.stringify([]));\r\n      }\r\n      if (\"deletewordid\" in localStorage) {\r\n      } else {\r\n        localStorage.setItem(\"deletewordid\", JSON.stringify([]));\r\n      }\r\n    }\r\n    if (type === \"deleted\") {\r\n      if (\"deletewordid\" in localStorage) {\r\n        setWordsarrayid(JSON.parse(localStorage.getItem(\"deletewordid\")));\r\n        setDltWordsId(JSON.parse(localStorage.getItem(\"deletewordid\")));\r\n        setDifWordsId(JSON.parse(localStorage.getItem(\"difWordId\")));\r\n      } else {\r\n        setWordsarrayid([]);\r\n      }\r\n    }\r\n    setLoad(true);\r\n  }, [type, group, page]);\r\n\r\n  const delDif = useCallback(\r\n    (word) => {\r\n      setDifWordsId(JSON.parse(localStorage.getItem(\"difWordId\")));\r\n    },\r\n    [difWordsId]\r\n  );\r\n\r\n  const delHandler = useCallback(\r\n    (word) => {\r\n      if (\"deletewordid\" in localStorage) {\r\n        if (type !== \"deleted\") {\r\n          wordCntx.deleteHndlr(word);\r\n          setDltWordsId(JSON.parse(localStorage.getItem(\"deletewordid\")));\r\n        } else {\r\n          wordCntx.removeDeleteHndlr(word);\r\n          setDltWordsId(JSON.parse(localStorage.getItem(\"deletewordid\")));\r\n        }\r\n      }\r\n    },\r\n    [dltWordsId]\r\n  );\r\n\r\n  if (load) {\r\n    return (\r\n      <MainLayout>\r\n        <div className=\"vocabulary__cont\">\r\n          <div className=\"vocabulary__container\">\r\n            <div className=\"vocabulary__groups\">\r\n              {Array.from({ length: 6 }, (x, i) => i + 1).map((elem) => {\r\n                return (\r\n                  <Link to={`/vocabulary/${type}/${elem}/${page}`}>\r\n                    <div className={`${parseInt(group) === elem ? \"wordlist__active\" : null} group`}>{`Group ${elem}`}</div>\r\n                  </Link>\r\n                );\r\n              })}\r\n            </div>\r\n            <div className=\"vocabulary__buttons\">\r\n              <Link to={\"/vocabulary/learned/1/1\"}>\r\n                <div className={type === \"learned\" ? \"activated\" : null}>Изученные слова</div>\r\n              </Link>\r\n              <Link to={\"/vocabulary/difficult/1/1\"}>\r\n                <div className={type === \"difficult\" ? \"activated\" : null}>Сложные слова</div>\r\n              </Link>\r\n              <Link to={\"/vocabulary/deleted/1/1\"}>\r\n                <div className={type === \"deleted\" ? \"activated\" : null}>Удаленные слова</div>\r\n              </Link>\r\n            </div>\r\n\r\n            <div className=\"vocabulary__content\">\r\n              <div className=\"wordsmissing\" style={{ display: `${hide ? \"none\" : \"flex\"}` }}>\r\n                В данном разделе слова отсутствуют по различным на то причинам\r\n              </div>\r\n              {/* {setHide(false)} */}\r\n              {wordsarray.map((elem, index) => {\r\n                if (wordsarrayid.includes(elem.id)) {\r\n                  if (hide === false) {\r\n                    setHide(true);\r\n                  }\r\n                  if (type === \"deleted\") {\r\n                    if (dltWordsId.includes(elem.id)) {\r\n                      return <Word word={elem} key={index} delHndlr={delHandler} />;\r\n                    }\r\n                  } else {\r\n                    if (type === \"difficult\") {\r\n                      if (difWordsId.includes(elem.id) && !dltWordsId.includes(elem.id)) {\r\n                        return <Word word={elem} key={index} delHndlr={delHandler} delDif={delDif} />;\r\n                      }\r\n                    } else {\r\n                      if (!dltWordsId.includes(elem.id)) {\r\n                        return <Word word={elem} key={index} delHndlr={delHandler} delDif={delDif} />;\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              })}\r\n            </div>\r\n            <Pagination\r\n              className=\"wordlist__pagination\"\r\n              count={30}\r\n              variant=\"outlined\"\r\n              shape=\"rounded\"\r\n              size=\"small\"\r\n              renderItem={(item) => (\r\n                <PaginationItem\r\n                  component={Link}\r\n                  to={`/vocabulary/${type}/${group}/${item.page === 1 ? \"1\" : `${item.page}`}`}\r\n                  {...item}\r\n                />\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n      </MainLayout>\r\n    );\r\n  } else {\r\n    return <div>Loading...</div>;\r\n  }\r\n}\r\n","import { useWordContext } from \"../context/WordContext\";\r\nimport \"../../styles/components/popup.scss\";\r\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUp\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function Popup({ word, setShow }) {\r\n  const wordCntx = useWordContext();\r\n  const [dWordsId, setDWordsId] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (\"difWordId\" in localStorage) {\r\n      setDWordsId(JSON.parse(localStorage.getItem(\"difWordId\")));\r\n    }\r\n  }, [word]);\r\n\r\n  return (\r\n    <div className=\"popup__container\" onMouseDown={setShow}>\r\n      <div\r\n        className=\"popup__content\"\r\n        onMouseDown={(event) => {\r\n          event.stopPropagation();\r\n        }}\r\n      >\r\n        <div className=\"popup__head\">\r\n          <img\r\n            className=\"popup__image\"\r\n            src={`https://react-learnwords-rslang.herokuapp.com/${word.image}`}\r\n            alt={\"word_image.jpg\"}\r\n          />\r\n          <div className=\"popup__title\">\r\n            <div className=\"popup__word\">\r\n              <h1>{word.word}</h1>\r\n              <VolumeUpIcon onClick={wordCntx.soundHandler.bind(this, word.audio)} title=\"Прослушать произношение\" />\r\n            </div>\r\n            <div className=\"popup__translate\">Перевод: {word.wordTranslate}</div>\r\n            <div className=\"popup__transcript\">Транскрипция: {word.transcription}</div>\r\n            {wordCntx.showWordTransl ? <div className=\"popup__translate\">Перевод: {word.wordTranslate}</div> : null}\r\n            <div className=\"popup__transcript\">Транскрипция: {word.transcription}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"popup__meaning_container\">\r\n          <h3>Значение слова</h3>\r\n          <div className=\"popup__meaning\">\r\n            <div dangerouslySetInnerHTML={{ __html: word.textMeaning }} />\r\n            <VolumeUpIcon onClick={wordCntx.soundHandler.bind(this, word.audioMeaning)} title=\"Прослушать произношение\" />\r\n          </div>\r\n          <div className=\"popup__meaning-transl\">{word.textMeaningTranslate}</div>\r\n          {wordCntx.showExtraTransl ? <div className=\"popup__meaning-transl\">{word.textMeaningTranslate}</div> : null}\r\n        </div>\r\n        <div className=\"popup__example_container\">\r\n          <h3>Пример слова в предложении</h3>\r\n          <div className=\"popup__example\">\r\n            <div dangerouslySetInnerHTML={{ __html: word.textExample }} />\r\n            <VolumeUpIcon onClick={wordCntx.soundHandler.bind(this, word.audioExample)} title=\"Прослушать произношение\" />\r\n          </div>\r\n          <div className=\"popup__example-transl\">{word.textExampleTranslate}</div>\r\n          {wordCntx.showExtraTransl ? <div className=\"popup__example-transl\">{word.textExampleTranslate}</div> : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"../../styles/components/wordlistunit.scss\";\r\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUp\";\r\nimport { useWordContext } from \"../context/WordContext\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Popup from \"./popup\";\r\n\r\nexport default function Wordunit({ word, delHndlr }) {\r\n  const wordCntx = useWordContext();\r\n  const [dWordsId, setDWordsId] = useState([]);\r\n  const [diffword, setDiffword] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (\"difWordId\" in localStorage) {\r\n      setDWordsId(JSON.parse(localStorage.getItem(\"difWordId\")));\r\n    }\r\n  }, [word]);\r\n\r\n  useEffect(() => {\r\n    setDiffword(false);\r\n    if (dWordsId.includes(word.id)) {\r\n      setDiffword(true);\r\n    }\r\n  }, [dWordsId, show]);\r\n\r\n  function clickHandler() {\r\n    if (diffword) {\r\n      wordCntx.removeDifHndlr(word);\r\n      setDWordsId(JSON.parse(localStorage.getItem(\"difWordId\")));\r\n    } else {\r\n      wordCntx.difHndlr(word);\r\n      setDWordsId(JSON.parse(localStorage.getItem(\"difWordId\")));\r\n    }\r\n  }\r\n\r\n  function delClickHndlr() {\r\n    wordCntx.deleteHndlr(word);\r\n    delHndlr();\r\n  }\r\n\r\n  const showPopup = useCallback((a) => {\r\n    setShow(false);\r\n  });\r\n\r\n  return (\r\n    <div className={`wordunit__container ${diffword ? \"diffword\" : null}`}>\r\n      {show ? <Popup word={word} setShow={showPopup} /> : <div />}\r\n      <img\r\n        className=\"image\"\r\n        src={`https://react-learnwords-rslang.herokuapp.com/${word.image}`}\r\n        alt={\"word_image.jpg\"}\r\n        onClick={() => {\r\n          setShow(true);\r\n        }}\r\n      />\r\n      <div\r\n        className=\"wordunit__content\"\r\n        onClick={() => {\r\n          setShow(true);\r\n        }}\r\n      >\r\n        <div className=\"wordunit__word\">\r\n          <div>{word.word.toUpperCase()}</div>\r\n          <VolumeUpIcon\r\n            title=\"Прослушать произношение\"\r\n            onClick={(event) => {\r\n              wordCntx.soundHandler(word.audio);\r\n              event.stopPropagation();\r\n            }}\r\n          />\r\n        </div>\r\n        {wordCntx.showWordTransl ? <div>{word.wordTranslate}</div> : null}\r\n      </div>\r\n      <div className=\"wordunit__buttons\">\r\n        {wordCntx.showDifButton ? (\r\n          <button\r\n            className=\"wordunit__button-submit\"\r\n            onClick={(event) => {\r\n              event.stopPropagation();\r\n              clickHandler();\r\n            }}\r\n          >\r\n            {diffword ? \"Убрать из сложных\" : \"Сложное слово\"}\r\n          </button>\r\n        ) : null}\r\n        {wordCntx.showDelButton ? (\r\n          <button\r\n            className=\"wordunit__button-submit\"\r\n            onClick={(event) => {\r\n              event.stopPropagation();\r\n              delClickHndlr();\r\n            }}\r\n          >\r\n            Удалить слово\r\n          </button>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Pagination, PaginationItem } from \"@material-ui/lab\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Wordunit from \"../componets/wordlistunit\";\r\nimport MainLayout from \"../layouts/MainLayout\";\r\n\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport TimerIcon from \"@material-ui/icons/Timer\";\r\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\r\nimport AudiotrackIcon from \"@material-ui/icons/Audiotrack\";\r\nimport SpaIcon from \"@material-ui/icons/Spa\";\r\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport \"../../styles/pages/wordlist.scss\";\r\nimport { useWordContext } from \"../context/WordContext\";\r\nexport default function Wordlist() {\r\n  const [words, setWords] = useState([]);\r\n  const [load, setLoad] = useState(false);\r\n  const [dltWordsId, setDltWordsId] = useState([]);\r\n  const [hide, setHide] = useState(false)\r\n  const { group } = useParams();\r\n  const { page } = useParams();\r\n  const wordCntx = useWordContext();\r\n\r\n  useEffect(() => {\r\n    setLoad(false);\r\n    wordCntx.setPagenum(page);\r\n    wordCntx.setGroupnum(group);\r\n    fetch(`https://react-learnwords-rslang.herokuapp.com/words?group=${group - 1}&page=${page - 1}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"HTTP error \" + response.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        data && setWords(data);\r\n        setLoad(true);\r\n      })\r\n      .catch((error) => console.error(\"country countries loader\", error));\r\n    if (\"deletewordid\" in localStorage) {\r\n      setDltWordsId(JSON.parse(localStorage.getItem(\"deletewordid\")));\r\n    }\r\n  }, [group, page]);\r\n\r\n  const delHandler = useCallback(() => {\r\n    if (\"deletewordid\" in localStorage) {\r\n      setDltWordsId(JSON.parse(localStorage.getItem(\"deletewordid\")));\r\n    }\r\n  }, [dltWordsId]);\r\n\r\n  return (\r\n    <MainLayout>\r\n      <div className=\"wordlist__cont\">\r\n        <div className=\"wordlist__container\">\r\n          <div className=\"wordlist__groups\">\r\n            {Array.from({ length: 6 }, (x, i) => i + 1).map((elem) => {\r\n              return (\r\n                <Link to={`/wordlist/${elem}/${page}`}>\r\n                  <div className={parseInt(group) === elem ? \"wordlist__active\" : null}>{`Group ${elem}`}</div>\r\n                </Link>\r\n              );\r\n            })}\r\n          </div>\r\n          {load ? (\r\n            <div className=\"wordlist__content\">\r\n              {words.map((elem) => {\r\n                if (!dltWordsId.includes(elem.id)) {\r\n                  return <Wordunit word={elem} delHndlr={delHandler} />;\r\n                }\r\n              })}\r\n              {!hide ?<Fab size=\"medium\" id='minigame-open' onClick={()=>{setHide(true)}}>\r\n                    <SportsEsportsIcon />\r\n                  </Fab> : null}\r\n              {hide ? <div className=\"wordlist__minigames\">\r\n              <div  id='minigame-close' onClick={()=>{setHide(false)}}>\r\n                    <CloseIcon />\r\n                  </div>\r\n                <Link to={`/games/savanna/${group}/${page}`}>\r\n                  <Fab variant=\"extended\" size=\"medium\" /*style={{ width: 180 }}*/>\r\n                    <SpaIcon />\r\n                    Savannah\r\n                  </Fab>\r\n                </Link>\r\n                <Link to={`/games/audio/${group}/${page}`}>\r\n                  <Fab variant=\"extended\" size=\"medium\">\r\n                    <AudiotrackIcon />\r\n                    AudioGame\r\n                  </Fab>\r\n                </Link>\r\n                <Link to={`/games/forkids/${group}/${page}`}>\r\n                  <Fab variant=\"extended\" size=\"medium\">\r\n                    <MenuBookIcon />\r\n                    EngForKids\r\n                  </Fab>\r\n                </Link>\r\n                <Link to={`/games/sprint/${group}/${page}`}>\r\n                  <Fab variant=\"extended\" size=\"medium\">\r\n                    <TimerIcon />\r\n                    Sprint\r\n                  </Fab>\r\n                </Link>\r\n              \r\n              </div> : null}\r\n            </div>\r\n          ) : (\r\n            <div className=\"wordlist__content\">\r\n              <div id=\"fountainG\">\r\n                <div id=\"fountainG_1\" class=\"fountainG\"></div>\r\n                <div id=\"fountainG_2\" class=\"fountainG\"></div>\r\n                <div id=\"fountainG_3\" class=\"fountainG\"></div>\r\n                <div id=\"fountainG_4\" class=\"fountainG\"></div>\r\n                <div id=\"fountainG_5\" class=\"fountainG\"></div>\r\n                <div id=\"fountainG_6\" class=\"fountainG\"></div>\r\n                <div id=\"fountainG_7\" class=\"fountainG\"></div>\r\n                <div id=\"fountainG_8\" class=\"fountainG\"></div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <Pagination\r\n            className=\"wordlist__pagination\"\r\n            count={30}\r\n            variant=\"outlined\"\r\n            shape=\"rounded\"\r\n            size='small'\r\n            renderItem={(item) => (\r\n              <PaginationItem component={Link} to={`/wordlist/${group}/${item.page === 1 ? \"1\" : `${item.page}`}`} {...item} />\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n    </MainLayout>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport useHttp from \"../hooks/http.hook\";\r\nimport HeaderAuthorized from \"../blocks/header-autorized\";\r\n//import EnglishForKids from \"../blocks/englishforkids-block\";\r\nimport Burger from \"../blocks/burger\";\r\nimport FullscreenIcon from \"@material-ui/icons/Fullscreen\";\r\nimport FullscreenExitIcon from \"@material-ui/icons/FullscreenExit\";\r\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nexport default (props) => {\r\n  const handleFullScreen = useFullScreenHandle();\r\n  const [fullData, setFullData] = useState(null);\r\n  const [fullScreen, setFullScreen] = useState(false);\r\n  //const [type, setType] = useState(null);\r\n  const { loading, error, request } = useHttp();\r\n\r\n  const buttons = [\r\n    {\r\n      text: \"Очень легко\",\r\n      group: \"0\",\r\n    },\r\n    {\r\n      text: \"Легко\",\r\n      group: \"1\",\r\n    },\r\n    {\r\n      text: \"Средне\",\r\n      group: \"2\",\r\n    },\r\n    {\r\n      text: \"Выше среднего\",\r\n      group: \"3\",\r\n    },\r\n    {\r\n      text: \"Сложно\",\r\n      group: \"4\",\r\n    },\r\n    {\r\n      text: \"Очень сложно\",\r\n      group: \"5\",\r\n    },\r\n  ];\r\n  const wordsHandler = async (group, page = 0) => {\r\n    if (props.type === \"sprint\") {\r\n      const rqst = pagesHandler(group, page);\r\n      let wordsarr = [];\r\n      try {\r\n        let rq = await Promise.all(\r\n          rqst.map(async (elem) => {\r\n            const data = await request(\r\n              `https://react-learnwords-rslang.herokuapp.com/words?group=${elem[0]}&page=${elem[1]}`,\r\n              \"GET\",\r\n              null,\r\n              { accept: \"application/json\" }\r\n            );\r\n            wordsarr = wordsarr.concat(data);\r\n          })\r\n        );\r\n        setFullData(wordsarr.sort(() => Math.random() - 0.5));\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    } else {\r\n      try {\r\n        const data = await request(\r\n          `https://react-learnwords-rslang.herokuapp.com/words?group=${group}&page=${page}`,\r\n          \"GET\",\r\n          null,\r\n          { accept: \"application/json\" }\r\n        );\r\n        const randomWords = data.slice().sort(() => Math.random() - 0.5);\r\n        randomWords.map((elem) => (elem.checked = true));\r\n        setFullData({ data: randomWords });\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FullScreen\r\n      handle={handleFullScreen}\r\n      //enabled={fullScreen}\r\n      //onChange={(fullscreen) => setFullScreen(fullScreen)}\r\n    >\r\n      <div className=\"app-wrapper\">\r\n        <div className=\"content-wrapper\">\r\n          {/* <HeaderAuthorized /> */}\r\n\r\n          <div\r\n            className=\"gameLayout\"\r\n            style={{ backgroundImage: `url(${props.gameBackground})` }}\r\n          >\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                top: \"2%\",\r\n                width: \"100%\",\r\n                //left: \"0%\",\r\n                right: \"0%\",\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n                textAlign: \"center\",\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                flexDirection: \"row-reverse\",\r\n              }}\r\n            >\r\n              <Burger></Burger>\r\n              {!fullScreen ? (\r\n                <Button\r\n                  onClick={() => {\r\n                    setFullScreen(true);\r\n                    handleFullScreen.enter();\r\n                  }}\r\n                >\r\n                  <FullscreenIcon color=\"secondary\" />\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  onClick={() => {\r\n                    setFullScreen(false);\r\n                    handleFullScreen.exit();\r\n                  }}\r\n                >\r\n                  <FullscreenExitIcon color=\"secondary\" />\r\n                </Button>\r\n              )}\r\n            </div>\r\n            {!fullData &&\r\n              !loading &&\r\n              !props.match.params.group &&\r\n              !props.match.params.page && (\r\n                <div>\r\n                  <h1 className=\"gameLayout-h1\">{props.text}</h1>\r\n                  {buttons.map((elem) => (\r\n                    <button\r\n                      className=\"gameLayout-button\"\r\n                      disabled={loading}\r\n                      onClick={() => wordsHandler(elem.group)}\r\n                      //value={elem.group}\r\n                    >\r\n                      {elem.text}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            {!fullData &&\r\n              !loading &&\r\n              props.match.params.group &&\r\n              props.match.params.page && (\r\n                <div>\r\n                  <h1 className=\"gameLayout-h1\">{props.text}</h1>\r\n                  <button\r\n                    className=\"gameLayout-button\"\r\n                    disabled={loading}\r\n                    onClick={() =>\r\n                      wordsHandler(\r\n                        props.match.params.group,\r\n                        props.match.params.page\r\n                      )\r\n                    }\r\n                    //value={elem.group}\r\n                  >\r\n                    Начать игру\r\n                  </button>\r\n                </div>\r\n              )}\r\n            {!fullData && loading && (\r\n              <div>\r\n                <CircularProgress></CircularProgress>\r\n              </div>\r\n            )}\r\n            {fullData && !loading && props.children(fullData)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </FullScreen>\r\n  );\r\n};\r\n\r\nfunction pagesHandler(currentGroup, currentPage) {\r\n  let array = [];\r\n  if (currentPage < 3) {\r\n    for (let i = 0; array.length < 4; i++) {\r\n      array.push([currentGroup, currentPage + i]);\r\n    }\r\n  } else {\r\n    if (currentPage > 28) {\r\n      for (let i = 0; array.length < 4; i++) {\r\n        array.push([currentGroup, currentPage - i]);\r\n      }\r\n    } else {\r\n      for (let i = -2; array.length < 4; i++) {\r\n        array.push([currentGroup, currentPage + i]);\r\n      }\r\n    }\r\n  }\r\n  return array;\r\n}\r\n","import { useState } from \"react\";\r\nimport \"../../styles/components/timer.scss\";\r\nimport { useWordContext } from \"../context/WordContext\";\r\n\r\nconst FULL_DASH_ARRAY = 283;\r\nconst WARNING_THRESHOLD = 10;\r\nconst ALERT_THRESHOLD = 5;\r\nconst TIME_LIMIT = 60;\r\n\r\nconst COLOR_CODES = {\r\n  info: {\r\n    color: \"green\",\r\n  },\r\n  warning: {\r\n    color: \"orange\",\r\n    threshold: WARNING_THRESHOLD,\r\n  },\r\n  alert: {\r\n    color: \"red\",\r\n    threshold: ALERT_THRESHOLD,\r\n  },\r\n};\r\n\r\nfunction formatTime(time) {\r\n  const minutes = Math.floor(time / 60);\r\n  let seconds = time % 60;\r\n  if (seconds < 10) {\r\n    seconds = `0${seconds}`;\r\n  }\r\n  return `${minutes}:${seconds}`;\r\n}\r\n\r\nexport default function Timer() {\r\n  let timerInterval = null;\r\n  const wordCntx = useWordContext();\r\n  let timePassed = 0;\r\n  let timeLft = TIME_LIMIT;\r\n  const [timeLeft, setTimeLeft] = useState(`1:00`);\r\n  const [circleDasharray, setCircleDasharray] = useState(FULL_DASH_ARRAY);\r\n  const [remainingPathColor, setRemainingPathColor] = useState(COLOR_CODES.info.color);\r\n\r\n  function onTimesUp() {\r\n    clearInterval(timerInterval);\r\n    setTimeLeft(\"1:00\");\r\n    setCircleDasharray(FULL_DASH_ARRAY);\r\n  }\r\n\r\n  function startTimer() {\r\n    clearInterval(timerInterval);\r\n    wordCntx.setStart(false);\r\n    wordCntx.setTimerOut(false);\r\n    timerInterval = setInterval(() => {\r\n      wordCntx.setTimer(true);\r\n      timePassed = timePassed + 1;\r\n      timeLft = TIME_LIMIT - timePassed;\r\n      setTimeLeft(formatTime(timeLft));\r\n      setCircleDasharray(`${(calculateTimeFraction() * FULL_DASH_ARRAY).toFixed(0)} 283`);\r\n      setPathColor(timeLft);\r\n      if (timeLft === 0) {\r\n        onTimesUp();\r\n        setRemainingPathColor(COLOR_CODES.info.color);\r\n        wordCntx.setTimer(false);\r\n        wordCntx.setTimerOut(true);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  function calculateTimeFraction() {\r\n    const rawTimeFraction = timeLft / TIME_LIMIT;\r\n    return rawTimeFraction - (1 / TIME_LIMIT) * (1 - rawTimeFraction);\r\n  }\r\n\r\n  function setPathColor(timeLeft) {\r\n    const { alert, warning, info } = COLOR_CODES;\r\n    if (timeLeft <= alert.threshold) {\r\n      setRemainingPathColor(alert.color);\r\n    } else if (timeLeft <= warning.threshold) {\r\n      setRemainingPathColor(warning.color);\r\n    }\r\n  }\r\n  if (wordCntx.start) {\r\n    startTimer();\r\n  }\r\n  return (\r\n    <div class=\"base-timer\">\r\n      <svg class=\"base-timer__svg\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <g class=\"base-timer__circle\">\r\n          <circle class=\"base-timer__path-elapsed\" cx=\"50\" cy=\"50\" r=\"45\"></circle>\r\n          <path\r\n            id=\"base-timer-path-remaining\"\r\n            stroke-dasharray={`${circleDasharray}`}\r\n            class={`base-timer__path-remaining ${remainingPathColor}`}\r\n            d=\"\r\n          M 50, 50\r\n          m -45, 0\r\n          a 45,45 0 1,0 90,0\r\n          a 45,45 0 1,0 -90,0\r\n        \"\r\n          ></path>\r\n        </g>\r\n      </svg>\r\n      <span id=\"base-timer-label\" class=\"base-timer__label\">\r\n        {`${timeLeft}`}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport default (url) => {\r\n  const [src, setSrc] = useState(url);\r\n  const [audio] = useState(new Audio(src));\r\n  const [playing, setPlaying] = useState(false);\r\n\r\n  const toggleAudio = () => setPlaying(!playing);\r\n  const changeSrc = (url) => {\r\n    setSrc(url);\r\n  };\r\n\r\n  useEffect(() => {\r\n    playing ? audio.play() : audio.pause();\r\n  }, [playing]);\r\n\r\n  useEffect(() => {\r\n    audio.addEventListener(\"ended\", () => setPlaying(false));\r\n    return () => {\r\n      audio.removeEventListener(\"ended\", () => setPlaying(false));\r\n    };\r\n  }, []);\r\n  useEffect(() => {\r\n    audio.src = src;\r\n    audio.play();\r\n  }, [src]);\r\n\r\n  return [playing, toggleAudio, changeSrc];\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport AuthContext from \"../context/AuthContext\";\r\n//import useHttp from \"../hooks/audio.hook\";\r\nimport useAudio from \"../hooks/audio.hook\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUp\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useWordContext } from \"../context/WordContext\";\r\n\r\nconst baseUrl = \"https://react-learnwords-rslang.herokuapp.com/\";\r\n\r\nexport default (props) => {\r\n  const [url, setUrl] = useState(null);\r\n  const correctWords = props.correct;\r\n  const wrongWords = props.wrong;\r\n  const score = props.score;\r\n  const [selectedValue, setSelectedValue] = useState(\"stats\");\r\n  const [toggle, setToggle] = useState(true);\r\n  const [toggle1, setToggle1] = useState(false);\r\n  const auth = useContext(AuthContext);\r\n  const [playing, toggleAudio, changeSrc] = useAudio(null);\r\n  const wordCntx = useWordContext();\r\n\r\n  const handleChange = (event) => {\r\n    setSelectedValue(event.target.value);\r\n    setToggle(!toggle);\r\n  };\r\n  const toggleAudioHandler = (audio) => {\r\n    changeSrc(`${baseUrl}${audio}`);\r\n\r\n    toggleAudio();\r\n  };\r\n  // useEffect(() => {\r\n  //   console.log(error);\r\n  // }, error);\r\n  let percent =\r\n    correctWords && wrongWords ? Math.round((correctWords.length / (correctWords.length + wrongWords.length)) * 100) : 0;\r\n  return (\r\n    <div className=\"gameover__screen\">\r\n      <div className=\"gameover__screen_switchWindow\">\r\n        {toggle && (\r\n          <div className=\"gameover__screen_switchWindowWrap\">\r\n            <div className=\"gameover__screen_title\">\r\n              <h2 className=\"gameover__screen_title-h2\">Игра окончена</h2>\r\n              <p className=\"gameover__screen_title-p\">\r\n                слов изучено {correctWords ? correctWords.length : 0}, {wrongWords ? wrongWords.length : 0} на изучении\r\n              </p>\r\n              { score && <p className=\"gameover__screen_title-p\">\r\n                Ваш счет: {score}\r\n              </p>}\r\n            </div>\r\n            <div className=\"gameover_screen_stats\">\r\n              <div className=\"gameover_screen_stats-statCircle\">\r\n                <div className=\"gameover_screen_stats-outerCircle\">\r\n                  <div className=\"gameover_screen_stats-innerCircle\">{percent}%</div>\r\n                  <div className=\"gameover_screen_stats-animation\" style={{ height: `${percent}%` }}></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <CSSTransition\r\n          in={!toggle}\r\n          timeout={{\r\n            enter: 300,\r\n            exit: 300,\r\n          }}\r\n          mountOnEnter\r\n          unmountOnExit\r\n          classNames=\"gameover-animation\"\r\n          onExited={() => {\r\n            setToggle(true);\r\n          }}\r\n        >\r\n          <div className=\"gameover__screen_switchWindow-listContainer\">\r\n            <ul className=\"gameover__screen_switchWindow-list\">\r\n              <li>\r\n                <span>Знаю </span>\r\n                <span className=\"gameover__screen_switchWindow-correctTitle\">{correctWords ? correctWords.length : \"0\"}</span>\r\n              </li>\r\n              {correctWords &&\r\n                correctWords.map((word) => {\r\n                  wordCntx.correctHndlr(word);\r\n                  return (\r\n                    <li className=\"gameover__screen_switchWindow-li\">\r\n                      <button\r\n                        onClick={() => toggleAudioHandler(word.audio)}\r\n                        value={word.audio}\r\n                        className={\r\n                          playing ? \"gameover__screen_switchWindow-soundButton\" : \"gameover__screen_switchWindow-soundButton\"\r\n                        }\r\n                      >\r\n                        <VolumeUpIcon></VolumeUpIcon>\r\n                      </button>\r\n                      <div className=\"gameover__screen_switchWindow-word\">\r\n                        <p>{word && word.word}</p>\r\n                      </div>\r\n                      <div className=\"gameover__screen_switchWindow-wordTranslate\">\r\n                        <p>- {word && word.wordTranslate}</p>\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n            <ul>\r\n              <li>\r\n                <span>Ошибок </span>\r\n                <span className=\"gameover__screen_switchWindow-wrongTitle\">{wrongWords ? wrongWords.length : \"0\"}</span>\r\n              </li>\r\n              {wrongWords &&\r\n                wrongWords.map((word) => (\r\n                  <li className=\"gameover__screen_switchWindow-li\">\r\n                    <button\r\n                      onClick={() => toggleAudioHandler(word.audio)}\r\n                      value={word.audio}\r\n                      className={\r\n                        playing ? \"gameover__screen_switchWindow-soundButton\" : \"gameover__screen_switchWindow-soundButton\"\r\n                      }\r\n                    >\r\n                      <VolumeUpIcon></VolumeUpIcon>\r\n                    </button>\r\n                    <div className=\"gameover__screen_switchWindow-word\">\r\n                      <p>{word && word.word}</p>\r\n                    </div>\r\n                    <div className=\"gameover__screen_switchWindow-wordTranslate\">\r\n                      <p>- {word && word.wordTranslate}</p>\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n            </ul>\r\n          </div>\r\n        </CSSTransition>\r\n      </div>\r\n      <RadioGroup row onChange={handleChange} value={selectedValue} className=\"gameover_screen-radioGroup\">\r\n        <Radio value={\"stats\"} name=\"radio-button-demo\" inputProps={{ \"aria-label\": \"A\" }} />\r\n        <Radio value={\"words\"} name=\"radio-button-demo\" inputProps={{ \"aria-label\": \"B\" }} />\r\n      </RadioGroup>\r\n      <div>\r\n        <Link to={\"/\"}>\r\n          <button className=\"registration__button-submit\">На главную</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport Timer from \"../componets/timer\";\r\nimport { useWordContext } from \"../context/WordContext\";\r\nimport \"../../styles/pages/sprint.scss\";\r\nimport Gameover from \"../blocks/gameover\";\r\n\r\nexport default function SprintBlock({ data }) {\r\n  const wordCntx = useWordContext();\r\n  const [correctAns, setCorrectAns] = useState(null);\r\n  const [score, setScore] = useState(0);\r\n  const [quest, setQuest] = useState(\"word\");\r\n  const [questAns, setQuestAns] = useState(\"word\");\r\n  const [ans, setAns] = useState([\"word1\", \"word2\", \"word3\", \"word4\"]);\r\n  const [mult, setMult] = useState(1);\r\n  const [correctWords] = useState([]);\r\n  const [wrongWords] = useState([]);\r\n  const [correctWordsLength, setCorrectWordsLength] = useState(correctWords.length);\r\n  const [wrongWordsLength, setWrongWordsLength] = useState(wrongWords.length);\r\n  const [dis, setDis] = useState(false);\r\n  const [qWord, setQword] = useState(data[0]);\r\n\r\n  //   let qWord;\r\n\r\n  useEffect(() => {\r\n    startHandler();\r\n  }, []);\r\n\r\n  function randomWords() {\r\n    let numarr = [];\r\n    let qarr = [];\r\n    let check = [];\r\n\r\n    while (qarr.length < 1) {\r\n      let num = Math.floor(Math.random() * 80);\r\n      if (!check.includes(num)) {\r\n        qarr.push(num);\r\n        check.push(num);\r\n      }\r\n    }\r\n    for (let i = 0; numarr.length < 3; i++) {\r\n      let num = Math.floor(Math.random() * 80);\r\n      if (!numarr.includes(num) && !qarr.includes(num)) {\r\n        numarr.push(num);\r\n      }\r\n    }\r\n    setQword(data[qarr[0]]);\r\n    let mword1 = data[numarr[0]].wordTranslate;\r\n    let mword2 = data[numarr[1]].wordTranslate;\r\n    let mword3 = data[numarr[2]].wordTranslate;\r\n    setQuest(qWord.word);\r\n    setQuestAns(qWord.wordTranslate);\r\n    setAns([qWord.wordTranslate, mword1, mword2, mword3].sort(() => Math.random() - 0.5));\r\n  }\r\n\r\n  function startHandler() {\r\n    randomWords();\r\n    wordCntx.setStart(true);\r\n  }\r\n\r\n  function ansHandler(word) {\r\n    setDis(true);\r\n    if (word === questAns) {\r\n      setScore(score + mult);\r\n      correctWords.push(qWord);\r\n      setCorrectWordsLength(correctWords.length);\r\n      setCorrectAns(\"correct\");\r\n      setTimeout(() => {\r\n        if (mult !== 3) {\r\n          setMult(mult + 1);\r\n        }\r\n        randomWords();\r\n        setCorrectAns(null);\r\n        setDis(false);\r\n      }, 1000);\r\n    } else {\r\n      setCorrectAns(\"wrong\");\r\n      wrongWords.push(qWord);\r\n      setWrongWordsLength(wrongWords.length);\r\n      setTimeout(() => {\r\n        setMult(1);\r\n        randomWords();\r\n        setCorrectAns(null);\r\n        setDis(false);\r\n      }, 1000);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"savanna\">\r\n      <div className=\"statistic\" style={{ display: `${wordCntx.timerOut ? \"flex\" : \"none\"}` }}>\r\n        {wordCntx.timerOut ? <Gameover correct={correctWords} wrong={wrongWords} score={score} /> : null}\r\n      </div>\r\n      <div className=\"sprint__container\">\r\n        <div className=\"sprint__timer\">\r\n          <Timer />\r\n        </div>\r\n        <div className=\"sprint__mult\">\r\n          <div className=\"sprint__mult_orb\" style={{ backgroundColor: `${mult >= 1 ? \"green\" : \"gray\"}  ` }}>\r\n            x1\r\n          </div>\r\n          <div className=\"sprint__mult_orb\" style={{ backgroundColor: `${mult >= 2 ? \"green\" : \"gray\"}  ` }}>\r\n            x2\r\n          </div>\r\n          <div className=\"sprint__mult_orb\" style={{ backgroundColor: `${mult >= 3 ? \"green\" : \"gray\"}  ` }}>\r\n            x3\r\n          </div>\r\n        </div>\r\n        <div className={`sprint__questword ${correctAns}`}>{quest.toUpperCase()}</div>\r\n        <div className=\"sprint__buttons\">\r\n          {ans.map((elem) => {\r\n            return (\r\n              <button className=\"registration__button-submit\" onClick={ansHandler.bind(this, elem)} disabled={dis}>\r\n                {elem}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"sprint__score\">{`Score: ${score}`}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/sprint.d76fdbc7.jpg\";","import GameLayout from \"../layouts/GameLayout\";\r\nimport SprintBlock from \"../blocks/sprint-block\";\r\nimport gameBackground from \"../../assets/images/backgrounds/sprint.jpg\";\r\n\r\nconst text = \"Sprint\";\r\nexport default (props) => {\r\n  return (\r\n    <GameLayout {...props} gameBackground={gameBackground} text={text} type=\"sprint\">\r\n      {(gameprops) => <SprintBlock data={gameprops} />}\r\n    </GameLayout>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/error.88bbaea7.mp3\";","export default __webpack_public_path__ + \"static/media/correct.23d0e138.mp3\";","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CSSTransition,\r\n  TransitionGroup,\r\n  Transition,\r\n} from \"react-transition-group\";\r\nimport wrongAudioPath from \"../../assets/sounds/error.mp3\";\r\nimport correctAudioPath from \"../../assets/sounds/correct.mp3\";\r\nimport GameOver from \"./gameover\";\r\n\r\nexport default (props) => {\r\n  const [lives, setLives] = useState(5);\r\n  const [correctWords] = useState([]);\r\n  const [wrongWords] = useState([]);\r\n  const [wrongWordsLength, setWrongWordsLength] = useState(wrongWords.length);\r\n  const [correctWordsLength, setCorrectWordsLength] = useState(\r\n    correctWords.length\r\n  );\r\n  const wrongAudio = new Audio(wrongAudioPath);\r\n  const correctAudio = new Audio(correctAudioPath);\r\n  //\r\n  const [correct, setCorrect] = useState(null);\r\n  const [toggle, setToggle] = useState(null);\r\n  const [data, setData] = useState(props.data.data.slice());\r\n  const [baseData, setBaseData] = useState(\r\n    props.data.data.slice().sort(() => Math.random() - 0.5)\r\n  );\r\n  const [guess, setGuess] = useState(null);\r\n  const [baseWord, setBaseWord] = useState(null);\r\n\r\n  const quessHandler = (event) => {\r\n    //console.log(event.target.textContent);\r\n    //console.log(baseWord);\r\n    //console.log(guess);\r\n    //console.log(baseWord);\r\n    if (event.target.textContent === baseWord.word) {\r\n      let correctElem = baseData.find((elem) => elem.id === event.target.value);\r\n      if (\r\n        !wrongWords.find((elem) => elem.id === event.target.value) &&\r\n        !correctWords.find((elem) => elem.id === event.target.value)\r\n      ) {\r\n        correctWords.push(correctElem);\r\n      }\r\n      setCorrect(true);\r\n      correctAudio.play();\r\n      setCorrectWordsLength(correctWords.length);\r\n\r\n      setTimeout(nextpageHandler, 300);\r\n      // setToggle(false);\r\n      // setTimeout(newWords, 1200);\r\n      //newWords();\r\n    } else {\r\n      let wrongElem = baseData.find((elem) => elem.id === event.target.value);\r\n      if (\r\n        !wrongWords.find((elem) => elem.id === event.target.value) &&\r\n        !correctWords.find((elem) => elem.id === event.target.value)\r\n      ) {\r\n        wrongWords.push(wrongElem);\r\n      }\r\n      setLives(lives - 1);\r\n      // if (lives <= 1) {\r\n      //   data.length = 1;\r\n      //   nextpageHandler();\r\n      //   //setToggle(true);\r\n      //   //setCorrect(true);\r\n      // }\r\n      wrongAudio.play();\r\n      setWrongWordsLength(wrongWords.length);\r\n      //console.log(\"wrong\");\r\n\r\n      //console.log(guess);\r\n      //console.log(baseWord);\r\n      //newWords();\r\n    }\r\n  };\r\n  const addWrongWord = () => {\r\n    if (!correct) {\r\n      let wrongElem = baseData.find((elem) => elem.id === baseWord.id);\r\n      if (!wrongWords.find((elem) => elem.id === baseWord.id)) {\r\n        wrongWords.push(wrongElem);\r\n      }\r\n      setWrongWordsLength(wrongWords.length);\r\n      wrongAudio.play();\r\n    }\r\n  };\r\n  const nextpageHandler = () => {\r\n    // if (!correct) {\r\n    //   let wrongElem = baseData.find((elem) => elem.id === baseWord.id);\r\n    //   if (!wrongWords.find((elem) => elem.id === baseWord.id)) {\r\n    //     wrongWords.push(wrongElem);\r\n    //   }\r\n    //   setWrongWordsLength(wrongWords.length);\r\n    //   wrongAudio.play();\r\n    // }\r\n    setCorrect(false);\r\n    setToggle(false);\r\n    setTimeout(newWords, 300);\r\n  };\r\n  const newWords = () => {\r\n    setToggle(true);\r\n    let updateData = data.slice().sort(() => Math.random() - 0.5);\r\n    setData(updateData);\r\n    setGuess([updateData[0]]);\r\n    setBaseWord(updateData[0]);\r\n    const guesses = [updateData[0]];\r\n    let baseDataUpdate = baseData\r\n      .slice()\r\n      .sort(() => Math.random() - 0.5)\r\n      .filter((elem) => elem.id !== updateData[0].id);\r\n    updateData.shift();\r\n    setData(updateData);\r\n\r\n    //console.log(baseDataUpdate);\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n      guesses.push(baseDataUpdate[i]);\r\n    }\r\n    setGuess(guesses.slice().sort(() => Math.random() - 0.5));\r\n    //console.log(data);\r\n  };\r\n  useEffect(() => {\r\n    setData(props.data.data.slice());\r\n    setBaseData(props.data.data.slice().sort(() => Math.random() - 0.5));\r\n    newWords();\r\n  }, [props.data]);\r\n  useEffect(() => {\r\n    if (lives <= 0) {\r\n      data.length = 1;\r\n      nextpageHandler();\r\n    }\r\n  }, [lives]);\r\n\r\n  if (data.length > 0) {\r\n    return (\r\n      <div style={{ width: \"100%\" }}>\r\n        <div className=\"gameLayout__gameStats\">\r\n          <div className=\"gameLayout__gameStats-div\">\r\n            Выученые слова: {correctWordsLength}\r\n          </div>\r\n          <div className=\"gameLayout__gameStats-div\">\r\n            Неправильные слова: {wrongWordsLength}\r\n          </div>\r\n          <div className=\"gameLayout__gameStats-div\">\r\n            Слов осталось: {data.length}\r\n          </div>\r\n          <div className=\"gameLayout__gameStats-div\">Жизни: {lives}</div>\r\n        </div>\r\n        <CSSTransition\r\n          in={toggle}\r\n          timeout={{\r\n            enter: 15000,\r\n            exit: 300,\r\n          }}\r\n          mountOnEnter\r\n          //unmountOnExit\r\n          classNames=\"bw\"\r\n          onEntered={() => {\r\n            setLives(lives - 1);\r\n            addWrongWord();\r\n\r\n            nextpageHandler();\r\n          }}\r\n        >\r\n          <div className={`savanna__component-baseword`}>\r\n            <p>{baseWord && baseWord.wordTranslate}</p>\r\n          </div>\r\n        </CSSTransition>\r\n\r\n        <div className=\"savanna__component\">\r\n          <CSSTransition\r\n            in={toggle}\r\n            timeout={{\r\n              enter: 1000,\r\n              exit: 300,\r\n            }}\r\n            //onEnter={() => setShowButton(false)}\r\n            //onExited={() => setToggle(false)}\r\n            // addEndListener={(node, done) => {\r\n            //   node.addEventListener(\"transitionend\", done, false);\r\n            // }}\r\n            mountOnEnter\r\n            //unmountOnExit\r\n            classNames=\"wb\"\r\n          >\r\n            <div className=\"savanna__component-buttons\">\r\n              {guess &&\r\n                guess.map((word) => (\r\n                  <button\r\n                    value={word.id}\r\n                    disabled={correct}\r\n                    className={\r\n                      correct\r\n                        ? `audioChallenge__anwsers-button ${\r\n                            word.id === baseWord.id ? \"true\" : \"wrong\"\r\n                          }`\r\n                        : \"audioChallenge__anwsers-button\"\r\n                    }\r\n                    onClick={quessHandler}\r\n                  >\r\n                    {word.word}\r\n                  </button>\r\n                ))}\r\n            </div>\r\n          </CSSTransition>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <GameOver correct={correctWords} wrong={wrongWords}></GameOver>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/savannah.27e79e2e.jpg\";","// import React, { useEffect, useState } from \"react\";\r\n// import useHttp from \"../hooks/http.hook\";\r\n// import SavannaBlock from \"../blocks/savanna-block\";\r\n// import savannaBackground from \"../../assets/images/backgrounds/savannah.jpg\";\r\n// import CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n// export default () => {\r\n//   const [fullData, setFullData] = useState(null);\r\n//   const { loading, error, request } = useHttp();\r\n//   const group = 1;\r\n//   const page = 1;\r\n//   const wordsHandler = async () => {\r\n//     try {\r\n//       const data = await request(\r\n//         `https://react-learnwords-rslang.herokuapp.com/words?group=${group}&page=${page}`,\r\n//         \"GET\",\r\n//         null,\r\n//         { accept: \"application/json\" }\r\n//       );\r\n//       const randomWords = data.slice().sort(() => Math.random() - 0.5);\r\n//       //const randomGuesses = data.slice().sort(() => Math.random() - 0.5);\r\n//       setFullData({ data: randomWords });\r\n//       console.log(data);\r\n//       console.log(randomWords);\r\n//     } catch (e) {\r\n//       console.log(e);\r\n//     }\r\n//   };\r\n//   return (\r\n//     <div\r\n//       className=\"savanna\"\r\n//       style={{ backgroundImage: `url(${savannaBackground})` }}\r\n//     >\r\n//       {!fullData && !loading && (\r\n//         <button\r\n//           className=\"registration__button-submit\"\r\n//           disabled={loading}\r\n//           onClick={wordsHandler}\r\n//         >\r\n//           начать\r\n//         </button>\r\n//       )}\r\n//       {!fullData && loading && (\r\n//         <div>\r\n//           <CircularProgress></CircularProgress>\r\n//         </div>\r\n//       )}\r\n//       {fullData && <SavannaBlock data={fullData}></SavannaBlock>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nimport GameLayout from \"../layouts/GameLayout\";\r\nimport SavannaBlock from \"../blocks/savanna-block\";\r\nimport savannaBackground from \"../../assets/images/backgrounds/savannah.jpg\";\r\n\r\nconst text = \"Саванна\";\r\nexport default (props) => {\r\n  return (\r\n    <GameLayout\r\n      type=\"mouyagovnoigra\"\r\n      {...props}\r\n      gameBackground={savannaBackground}\r\n      text={text}\r\n    >\r\n      {(fullData) => <SavannaBlock data={fullData}></SavannaBlock>}\r\n    </GameLayout>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CSSTransition,\r\n  TransitionGroup,\r\n  Transition,\r\n} from \"react-transition-group\";\r\nimport useAudio from \"../hooks/audio.hook\";\r\nimport wrongAudioPath from \"../../assets/sounds/error.mp3\";\r\nimport correctAudioPath from \"../../assets/sounds/correct.mp3\";\r\nimport GameOver from \"./gameover\";\r\n\r\nconst baseUrl = \"https://react-learnwords-rslang.herokuapp.com/\";\r\n\r\nexport default (props) => {\r\n  const [correctWords] = useState([]);\r\n  const [wrongWords] = useState([]);\r\n  const [wrongWordsLength, setWrongWordsLength] = useState(wrongWords.length);\r\n  const [correctWordsLength, setCorrectWordsLength] = useState(\r\n    correctWords.length\r\n  );\r\n  //\r\n  const wrongAudio = new Audio(wrongAudioPath);\r\n  const correctAudio = new Audio(correctAudioPath);\r\n  //\r\n  const [data, setData] = useState(props.data.data.slice());\r\n  const [toggle, setToggle] = useState(null);\r\n  const [correct, setCorrect] = useState(null);\r\n  //\r\n  const [url, setUrl] = useState(null);\r\n  const [playing, toggleAudio, changeSrc] = useAudio(url);\r\n  //\r\n  const [baseData, setBaseData] = useState(\r\n    props.data.data.slice().sort(() => Math.random() - 0.5)\r\n  );\r\n  const [guess, setGuess] = useState(null);\r\n  const [baseWord, setBaseWord] = useState(null);\r\n  const [image, setImage] = useState(null);\r\n\r\n  const quessHandler = (event) => {\r\n    if (event.target.value === baseWord.id) {\r\n      //console.log(baseData);\r\n      let correctElem = baseData.find((elem) => elem.id === event.target.value);\r\n      if (\r\n        !wrongWords.find((elem) => elem.id === event.target.value) &&\r\n        !correctWords.find((elem) => elem.id === event.target.value)\r\n      ) {\r\n        correctWords.push(correctElem);\r\n      }\r\n      setCorrect(true);\r\n      correctAudio.play();\r\n      setCorrectWordsLength(correctWords.length);\r\n    } else {\r\n      let wrongElem = baseData.find((elem) => elem.id === event.target.value);\r\n      if (!wrongWords.find((elem) => elem.id === event.target.value)) {\r\n        wrongWords.push(wrongElem);\r\n      }\r\n      wrongAudio.play();\r\n      setWrongWordsLength(wrongWords.length);\r\n      //console.log(\"wrong\");\r\n    }\r\n  };\r\n  const nextpageHandler = () => {\r\n    if (!correct) {\r\n      let wrongElem = baseData.find((elem) => elem.id === baseWord.id);\r\n      if (!wrongWords.find((elem) => elem.id === baseWord.id)) {\r\n        wrongWords.push(wrongElem);\r\n      }\r\n      setWrongWordsLength(wrongWords.length);\r\n      wrongAudio.play();\r\n    }\r\n    setToggle(false);\r\n    setTimeout(newWords, 1200);\r\n  };\r\n  const newWords = () => {\r\n    setCorrect(false);\r\n    setToggle(true);\r\n\r\n    let updateData = data.slice().sort(() => Math.random() - 0.5);\r\n\r\n    setGuess([updateData[0]]);\r\n    setBaseWord(updateData[0]);\r\n    setUrl(`${baseUrl}${updateData[0].audio}`);\r\n    setImage(`${baseUrl}${updateData[0].image}`);\r\n    const guesses = [updateData[0]];\r\n    let baseDataUpdate = baseData\r\n      .slice()\r\n      .sort(() => Math.random() - 0.5)\r\n      .filter((elem) => elem.id !== updateData[0].id);\r\n    updateData.shift();\r\n    setData(updateData);\r\n    for (let i = 0; i < 3; i++) {\r\n      guesses.push(baseDataUpdate[i]);\r\n    }\r\n    setGuess(guesses.slice().sort(() => Math.random() - 0.5));\r\n  };\r\n  useEffect(() => {\r\n    setData(props.data.data.slice());\r\n    setBaseData(props.data.data.slice().sort(() => Math.random() - 0.5));\r\n    newWords();\r\n  }, [props.data]);\r\n\r\n  if (data.length > 0) {\r\n    return (\r\n      <div style={{ width: \"100%\" }}>\r\n        <div className=\"gameLayout__gameStats\">\r\n          <div className=\"gameLayout__gameStats-div\">\r\n            Выученые слова: {correctWordsLength}\r\n          </div>\r\n          <div className=\"gameLayout__gameStats-div\">\r\n            Неправильные слова: {wrongWordsLength}\r\n          </div>\r\n          <div className=\"gameLayout__gameStats-div\">\r\n            Слов осталось: {data.length}\r\n          </div>\r\n        </div>\r\n        <CSSTransition\r\n          in={toggle}\r\n          timeout={{\r\n            enter: 1000,\r\n            exit: 1000,\r\n          }}\r\n          mountOnEnter\r\n          //unmountOnExit\r\n          classNames=\"audChall-buttons\"\r\n          onEntered={() => {\r\n            toggleAudio();\r\n            changeSrc(`${url}`);\r\n          }}\r\n        >\r\n          <div style={{ width: \"100%\" }}>\r\n            <div className=\"audioChallenge__base-word-container\">\r\n              <div className=\"audioChallenge__base-button-container\">\r\n                {!correct && (\r\n                  <button\r\n                    className={\r\n                      playing\r\n                        ? \"audioChallenge__base-button play\"\r\n                        : \"audioChallenge__base-button\"\r\n                    }\r\n                    style={{ margin: \"0 auto\" }}\r\n                    onClick={toggleAudio}\r\n                  >\r\n                    {playing ? \"Pause\" : \"Play\"}\r\n                  </button>\r\n                )}\r\n              </div>\r\n\r\n              <CSSTransition\r\n                in={correct}\r\n                timeout={{\r\n                  enter: 1000,\r\n                  exit: 300,\r\n                }}\r\n                mountOnEnter\r\n                unmountOnExit\r\n                classNames=\"ap-card\"\r\n              >\r\n                <div className=\"audioChallenge__card-correct\">\r\n                  <div className=\"audioChallenge__card-correct-image\">\r\n                    <img\r\n                      src={image}\r\n                      className=\"audioChallenge__base-image\"\r\n                    ></img>\r\n                  </div>\r\n                  <div className=\"audioChallenge__card-correct-bottom\">\r\n                    <button\r\n                      onClick={toggleAudio}\r\n                      className={\r\n                        playing\r\n                          ? \"audioChallenge__base-button play\"\r\n                          : \"audioChallenge__base-button\"\r\n                      }\r\n                    >\r\n                      {playing ? \"Pause\" : \"Play\"}\r\n                    </button>\r\n                    <div className=\"audioChallenge__base-correct-word\">\r\n                      <h2>{baseWord && baseWord.word}</h2>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CSSTransition>\r\n            </div>\r\n            <div className=\"savanna__component\">\r\n              <div className=\"savanna__component-buttons\">\r\n                {guess &&\r\n                  guess.map((word) => (\r\n                    <button\r\n                      value={word.id}\r\n                      disabled={correct}\r\n                      className={\r\n                        correct\r\n                          ? `audioChallenge__anwsers-button ${\r\n                              word.id === baseWord.id ? \"true\" : \"wrong\"\r\n                            }`\r\n                          : \"audioChallenge__anwsers-button\"\r\n                      }\r\n                      onClick={quessHandler}\r\n                    >\r\n                      {word.wordTranslate}\r\n                    </button>\r\n                  ))}\r\n              </div>\r\n\r\n              <button\r\n                onClick={nextpageHandler}\r\n                className=\"header__link login\"\r\n                style={{ margin: \"0 auto\" }}\r\n              >\r\n                {correct ? \"следующее слово\" : \"я не знаю\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </CSSTransition>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <GameOver correct={correctWords} wrong={wrongWords}></GameOver>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/audio.d08ca865.jpg\";","// import React, { useEffect, useState } from \"react\";\r\n// import useHttp from \"../hooks/http.hook\";\r\n// import AudioChallenge from \"../blocks/audioChallenge-block\";\r\n// import gameBackground from \"../../assets/images/backgrounds/audio.jpg\";\r\n// import CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n// export default () => {\r\n//   const [fullData, setFullData] = useState(null);\r\n//   const { loading, error, request } = useHttp();\r\n//   const group = 1;\r\n//   const page = 1;\r\n//   const wordsHandler = async () => {\r\n//     try {\r\n//       const data = await request(\r\n//         `https://react-learnwords-rslang.herokuapp.com/words?group=${group}&page=${page}`,\r\n//         \"GET\",\r\n//         null,\r\n//         { accept: \"application/json\" }\r\n//       );\r\n//       const randomWords = data.slice().sort(() => Math.random() - 0.5);\r\n//       //const randomGuesses = data.slice().sort(() => Math.random() - 0.5);\r\n//       setFullData({ data: randomWords });\r\n//       console.log(data);\r\n//       console.log(randomWords);\r\n//     } catch (e) {\r\n//       console.log(e);\r\n//     }\r\n//   };\r\n//   return (\r\n//     <div\r\n//       className=\"audioChallenge\"\r\n//       style={{ backgroundImage: `url(${gameBackground})` }}\r\n//     >\r\n//       {!fullData && !loading && (\r\n//         <button className=\"registration__button-submit\" onClick={wordsHandler}>\r\n//           начать\r\n//         </button>\r\n//       )}\r\n//       {!fullData && loading && (\r\n//         <div>\r\n//           <CircularProgress></CircularProgress>\r\n//         </div>\r\n//       )}\r\n//       {fullData && <AudioChallenge data={fullData}></AudioChallenge>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nimport GameLayout from \"../layouts/GameLayout\";\r\nimport AudioChallenge from \"../blocks/audioChallenge-block\";\r\nimport gameBackground from \"../../assets/images/backgrounds/audio.jpg\";\r\n\r\nconst text = \"Аудиовызов\";\r\nexport default (props) => {\r\n  return (\r\n    <GameLayout {...props} gameBackground={gameBackground} text={text}>\r\n      {(gameprops) => <AudioChallenge data={gameprops}></AudioChallenge>}\r\n    </GameLayout>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CSSTransition,\r\n  TransitionGroup,\r\n  Transition,\r\n} from \"react-transition-group\";\r\nimport useAudio from \"../hooks/audio.hook\";\r\nimport GameOver from \"./gameover\";\r\nimport wrongAudioPath from \"../../assets/sounds/error.mp3\";\r\nimport correctAudioPath from \"../../assets/sounds/correct.mp3\";\r\n\r\nconst baseUrl = \"https://react-learnwords-rslang.herokuapp.com/\";\r\n\r\nexport default (props) => {\r\n  const [correctWords] = useState([]);\r\n  const [wrongWords] = useState([]);\r\n  const [wrongWordsLength, setWrongWordsLength] = useState(wrongWords.length);\r\n  const [correctWordsLength, setCorrectWordsLength] = useState(\r\n    correctWords.length\r\n  );\r\n  const wrongAudio = new Audio(wrongAudioPath);\r\n  const correctAudio = new Audio(correctAudioPath);\r\n  //\r\n  const [data, setData] = useState(props.data.data.slice());\r\n\r\n  const [guessData, setGuessData] = useState(props.data.data.slice());\r\n\r\n  const [toggle, setToggle] = useState(null);\r\n  const [correct, setCorrect] = useState(null);\r\n  //\r\n  const [url, setUrl] = useState(null);\r\n  const [playing, toggleAudio, changeSrc] = useAudio(url);\r\n  //\r\n  const [baseData, setBaseData] = useState(\r\n    props.data.data.slice().sort(() => Math.random() - 0.5)\r\n  );\r\n\r\n  const [baseWord, setBaseWord] = useState(null);\r\n\r\n  const quessHandler = (event) => {\r\n    if (event.target.value === baseWord.id) {\r\n      //console.log(\"Correct\");\r\n      data.map((elem) => {\r\n        if (elem.id === event.target.value) {\r\n          elem.checked = false;\r\n        }\r\n      });\r\n      let correctElem = data.find((elem) => elem.id === event.target.value);\r\n      if (\r\n        !wrongWords.find((elem) => elem.id === event.target.value) &&\r\n        !correctWords.find((elem) => elem.id === event.target.value)\r\n      ) {\r\n        correctWords.push(correctElem);\r\n      }\r\n      //console.log(correctWords);\r\n      correctAudio.play();\r\n      setToggle(false);\r\n      setCorrectWordsLength(correctWords.length);\r\n      setTimeout(newWords, 1200);\r\n    } else {\r\n      let wrongElem = data.find((elem) => elem.id === event.target.value);\r\n      if (!wrongWords.find((elem) => elem.id === event.target.value)) {\r\n        wrongWords.push(wrongElem);\r\n      }\r\n      wrongAudio.play();\r\n      setWrongWordsLength(wrongWords.length);\r\n      //console.log(wrongWords);\r\n      //console.log(\"wrong\");\r\n    }\r\n  };\r\n  const newWords = () => {\r\n    //setCorrect(false);\r\n    setToggle(true);\r\n\r\n    let updateData = guessData.slice().sort(() => Math.random() - 0.5);\r\n\r\n    setBaseWord(updateData[0]);\r\n    setUrl(`${baseUrl}${updateData[0].audio}`);\r\n\r\n    changeSrc(`${baseUrl}${updateData[0].audio}`);\r\n    toggleAudio();\r\n    // let baseDataUpdate = baseData\r\n    //   .slice()\r\n    //   .sort(() => Math.random() - 0.5)\r\n    //   .filter((elem) => elem.id !== updateData[0].id);\r\n\r\n    updateData.shift();\r\n    //console.log(updateData);\r\n    setGuessData(updateData);\r\n  };\r\n  useEffect(() => {\r\n    setData(props.data.data.slice());\r\n    setBaseData(props.data.data.slice().sort(() => Math.random() - 0.5));\r\n    newWords();\r\n  }, [props.data]);\r\n\r\n  if (guessData.length > 0) {\r\n    return (\r\n      <div style={{ width: \"100%\", marginTop: \"150px\" }}>\r\n        <div className=\"gameLayout__gameStats\">\r\n          <div className=\"gameLayout__gameStats-div\">\r\n            Выученые слова: {correctWordsLength}\r\n          </div>\r\n          <div className=\"gameLayout__gameStats-div\">\r\n            Неправильные слова: {wrongWordsLength}\r\n          </div>\r\n          <div className=\"gameLayout__gameStats-div\">\r\n            Слов осталось: {data.length}\r\n          </div>\r\n        </div>\r\n        <div className=\"englishforkids_container\">\r\n          {data &&\r\n            data.map((word) => (\r\n              <div className=\"englishforkids_container-buttons\">\r\n                <img\r\n                  src={`${baseUrl}${word.image}`}\r\n                  className=\"englishforkids__base-image\"\r\n                ></img>\r\n                <button\r\n                  value={word.id}\r\n                  disabled={!word.checked}\r\n                  className={\r\n                    !word.checked\r\n                      ? `audioChallenge__anwsers-button wrong`\r\n                      : \"audioChallenge__anwsers-button correct\"\r\n                  }\r\n                  onClick={quessHandler}\r\n                >\r\n                  {word.wordTranslate}\r\n                </button>\r\n              </div>\r\n            ))}\r\n        </div>\r\n        <button\r\n          className={\r\n            playing\r\n              ? \"audioChallenge__base-button play\"\r\n              : \"audioChallenge__base-button\"\r\n          }\r\n          style={{ margin: \"30px auto\", display: \"block\" }}\r\n          onClick={toggleAudio}\r\n        >\r\n          {playing ? \"Pause\" : \"Play\"}\r\n        </button>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <GameOver correct={correctWords} wrong={wrongWords}></GameOver>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/englishforkids.d7bcb8af.jpg\";","// import React, { useEffect, useState } from \"react\";\r\n// import useHttp from \"../hooks/http.hook\";\r\n// import EnglishForKids from \"../blocks/englishforkids-block\";\r\n// import gameBackground from \"../../assets/images/backgrounds/englishforkids.jpg\";\r\n// import CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n// export default (props) => {\r\n//   const [fullData, setFullData] = useState(null);\r\n\r\n//   const [toggle, setToggle] = useState(null);\r\n//   //const [page, setPage] = useState(1);\r\n\r\n//   const { loading, error, request } = useHttp();\r\n//   // const group = 1;\r\n//   // const page = 1;\r\n//   const buttons = [\r\n//     {\r\n//       text: \"Очень легко\",\r\n//       group: \"0\",\r\n//     },\r\n//     {\r\n//       text: \"Легко\",\r\n//       group: \"1\",\r\n//     },\r\n//     {\r\n//       text: \"Средне\",\r\n//       group: \"2\",\r\n//     },\r\n//     {\r\n//       text: \"Выше среднего\",\r\n//       group: \"3\",\r\n//     },\r\n//     {\r\n//       text: \"Сложно\",\r\n//       group: \"4\",\r\n//     },\r\n//     {\r\n//       text: \"Очень сложно\",\r\n//       group: \"5\",\r\n//     },\r\n//   ];\r\n//   const wordsHandler = async (group, page = 0) => {\r\n//     //const group = event.target.value;\r\n//     try {\r\n//       const data = await request(\r\n//         `https://react-learnwords-rslang.herokuapp.com/words?group=${group}&page=${page}`,\r\n//         \"GET\",\r\n//         null,\r\n//         { accept: \"application/json\" }\r\n//       );\r\n//       const randomWords = data.slice().sort(() => Math.random() - 0.5);\r\n//       randomWords.map((elem) => (elem.checked = true));\r\n//       //const randomGuesses = data.slice().sort(() => Math.random() - 0.5);\r\n//       setFullData({ data: randomWords });\r\n//       console.log(data);\r\n//       console.log(randomWords);\r\n//     } catch (e) {\r\n//       console.log(e);\r\n//     }\r\n//   };\r\n//   return (\r\n//     <div\r\n//       className=\"englishforkids\"\r\n//       style={{ backgroundImage: `url(${gameBackground})` }}\r\n//     >\r\n//       {!fullData &&\r\n//         !loading &&\r\n//         !props.match.params.group &&\r\n//         !props.match.params.page && (\r\n//           <div>\r\n//             <h1>English For Kids</h1>\r\n//             {buttons.map((elem) => (\r\n//               <button\r\n//                 className=\"registration__button-submit\"\r\n//                 disabled={loading}\r\n//                 onClick={() => wordsHandler(elem.group)}\r\n//                 //value={elem.group}\r\n//               >\r\n//                 {elem.text}\r\n//               </button>\r\n//             ))}\r\n//           </div>\r\n//         )}\r\n//       {!fullData &&\r\n//         !loading &&\r\n//         props.match.params.group &&\r\n//         props.match.params.page && (\r\n//           <div>\r\n//             <h1>English For Kids</h1>\r\n//             <button\r\n//               className=\"registration__button-submit\"\r\n//               disabled={loading}\r\n//               onClick={() =>\r\n//                 wordsHandler(props.match.params.group, props.match.params.page)\r\n//               }\r\n//               //value={elem.group}\r\n//             >\r\n//               Начать игру\r\n//             </button>\r\n//           </div>\r\n//         )}\r\n//       {!fullData && loading && (\r\n//         <div>\r\n//           {\" \"}\r\n//           <CircularProgress></CircularProgress>\r\n//         </div>\r\n//       )}\r\n//       {fullData && !loading && (\r\n//         <EnglishForKids data={fullData}></EnglishForKids>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nimport GameLayout from \"../layouts/GameLayout\";\r\nimport EnglishForKids from \"../blocks/englishforkids-block\";\r\nimport gameBackground from \"../../assets/images/backgrounds/englishforkids.jpg\";\r\n\r\nconst text = \"English for Kids\";\r\nexport default (props) => {\r\n  return (\r\n    <GameLayout {...props} gameBackground={gameBackground} text={text}>\r\n      {(gameprops) => <EnglishForKids data={gameprops}></EnglishForKids>}\r\n    </GameLayout>\r\n  );\r\n};\r\n","import Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport VolumeDown from \"@material-ui/icons/VolumeDown\";\r\nimport VolumeUp from \"@material-ui/icons/VolumeUp\";\r\nimport { useWordContext } from \"../context/WordContext\";\r\n\r\nimport \"../../styles/pages/settings.scss\";\r\n\r\nexport default function Settings() {\r\n  const wordCntx = useWordContext();\r\n  return (\r\n    <div\r\n      className=\"settings__container\"\r\n      style={{ display: `${wordCntx.settings ? \"flex\" : \"none\"}` }}\r\n      onClick={() => wordCntx.setSettings(false)}\r\n    >\r\n      <div\r\n        className=\"settings__content\"\r\n        onClick={(event) => {\r\n          event.stopPropagation();\r\n        }}\r\n      >\r\n        <div>\r\n          <h5>{\"Настройки отображения перевода\"}</h5>\r\n          <FormGroup row>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={wordCntx.showWordTransl}\r\n                  onChange={(event) => {\r\n                    wordCntx.setShowWordTransl(event.target.checked);\r\n                  }}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Отображать перевод слова\"\r\n            />\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={wordCntx.showExtraTransl}\r\n                  onChange={(event) => {\r\n                    wordCntx.setShowExtraTransl(event.target.checked);\r\n                  }}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Отображать перевод возле пояснения и примера\"\r\n            />\r\n          </FormGroup>\r\n        </div>\r\n        <div>\r\n          <h5>{\"Настройки отображения кнопок управления словами\"}</h5>\r\n          <FormGroup row>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={wordCntx.showDifButton}\r\n                  onChange={(event) => {\r\n                    wordCntx.setShowDifButton(event.target.checked);\r\n                  }}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label={`Отображать кнопку \"Сложное слово\"`}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={wordCntx.showDelButton}\r\n                  onChange={(event) => {\r\n                    wordCntx.setShowDelButton(event.target.checked);\r\n                  }}\r\n                  name=\"checkedA\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label={`Отображать кнопку \"Удалить слово\"`}\r\n            />\r\n          </FormGroup>\r\n        </div>\r\n        <div>\r\n          <h5>{\"Настройки громкости звука\"}</h5>\r\n          <div className=\"settings__sound\">\r\n            <VolumeDown />\r\n            <Slider\r\n              value={wordCntx.soundVolume}\r\n              onChange={(event, newvalue) => {\r\n                wordCntx.setSoundVolume(newvalue);\r\n              }}\r\n              aria-labelledby=\"continuous-slider\"\r\n              style={{ width: \"70%\" }}\r\n            />\r\n            <VolumeUp />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport \"../../styles/components/wordtest.scss\";\r\nimport { useWordContext } from \"../context/WordContext\";\r\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUp\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nexport default function WordDifTest({ word, crct, setCrct }) {\r\n  const wordCntx = useWordContext();\r\n  const [dWordsId, setDWordsId] = useState([]);\r\n  const [diffword, setDiffword] = useState(false);\r\n  const [wrong, setWrong] = useState(false);\r\n  const [borderColor, setBorderColor] = useState(\"rgb(77, 77, 77)\");\r\n\r\n  useEffect(() => {\r\n    wordCntx.setLearnd(true);\r\n    if (crct.includes(word.id)) {\r\n      wordCntx.setLearnd(false);\r\n    }\r\n    if (\"difWordId\" in localStorage) {\r\n      setDWordsId(JSON.parse(localStorage.getItem(\"difWordId\")));\r\n    }\r\n  }, [word]);\r\n\r\n  useEffect(() => {\r\n    setDiffword(false);\r\n    if (dWordsId.includes(word.id)) {\r\n      setDiffword(true);\r\n    }\r\n  }, [dWordsId]);\r\n\r\n  function difClickHandler() {\r\n    if (diffword) {\r\n      wordCntx.removeDifHndlr(word);\r\n      setDWordsId(JSON.parse(localStorage.getItem(\"difWordId\")));\r\n    } else {\r\n      wordCntx.difHndlr(word);\r\n      setDWordsId(JSON.parse(localStorage.getItem(\"difWordId\")));\r\n    }\r\n  }\r\n\r\n  let testExample = word.textExample\r\n    .split(\" \")\r\n    .map((elem) => {\r\n      return elem.includes(\"<b>\") ? (elem = \"________\") : elem;\r\n    })\r\n    .join(\" \");\r\n\r\n  function clickHandler() {\r\n    if (wordCntx.answer == word.word) {\r\n      wordCntx.setLearnd(false);\r\n      wordCntx.setCorrect(true);\r\n      if (!crct.includes(word.id)) {\r\n        let buff = crct.concat(word.id);\r\n        setCrct(buff);\r\n      }\r\n      setWrong(false);\r\n      setBorderColor(\"green\");\r\n      setTimeout(() => {\r\n        setBorderColor(\"rgb(77, 77, 77)\");\r\n      }, 2000);\r\n    } else {\r\n      setWrong(true);\r\n      setBorderColor(\"red\");\r\n      setTimeout(() => {\r\n        setWrong(false);\r\n        setBorderColor(\"rgb(77, 77, 77)\");\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"wordtest__cont\">\r\n      <div className=\"wordtest__container\">\r\n        <img\r\n          className=\"wordtest__image\"\r\n          src={`https://react-learnwords-rslang.herokuapp.com/${word.image}`}\r\n          alt={`word_image.jpg`}\r\n          style={{ borderColor: borderColor }}\r\n        />\r\n        <div className=\"wordtest__content\">\r\n          <div className=\"wordtest__word\" style={{ display: `${wordCntx.learnd ? \"none\" : \"flex\"}` }}>\r\n            <h1>{word.word}</h1>\r\n            <VolumeUpIcon onClick={wordCntx.soundHandler.bind(this, word.audio)} title=\"Прослушать произношение\" />\r\n          </div>\r\n\r\n          <h1 className=\"wordtest__translate\" hidden={!wordCntx.learnd}>\r\n            {word.wordTranslate.toUpperCase()}\r\n          </h1>\r\n          <div className=\"wordtest__translate\" hidden={wordCntx.learnd || !wordCntx.showWordTransl}>\r\n            Перевод: {word.wordTranslate}\r\n          </div>\r\n          <div className=\"wordtest__transcript\" hidden={wordCntx.learnd}>\r\n            Транскрипция: {word.transcription}\r\n          </div>\r\n          <br />\r\n\r\n          <div style={{ display: `${wordCntx.learnd ? \"flex\" : \"none\"}` }}>\r\n            <form\r\n              onSubmit={(event) => {\r\n                event.preventDefault();\r\n                clickHandler();\r\n              }}\r\n            >\r\n              <Input\r\n                id=\"standard-basic\"\r\n                type=\"text\"\r\n                label=\"Введите слово\"\r\n                onKeyPress={(event) => (event.key === \"Enter\" ? clickHandler.bind(this) : null)}\r\n                onChange={(event) => wordCntx.setAnswer(event.target.value)}\r\n                value={wordCntx.answer}\r\n                autoComplete=\"off\"\r\n                color={wrong ? \"secondary\" : \"primary\"}\r\n              />\r\n            </form>\r\n            <div className=\"wordtest__agree\" onClick={clickHandler}>\r\n              <CheckIcon />\r\n            </div>\r\n            <div className=\"wordtest__clean\" onClick={() => wordCntx.setAnswer(\"\")}>\r\n              <ClearIcon />\r\n            </div>\r\n          </div>\r\n\r\n          <br style={{ display: `${wordCntx.learnd ? \"flex\" : \"none\"}` }} />\r\n          <div className=\"wordtest__meaning\" style={{ display: `${wordCntx.learnd ? \"none\" : \"flex\"}` }}>\r\n            <div dangerouslySetInnerHTML={{ __html: word.textMeaning }} />\r\n            <VolumeUpIcon onClick={wordCntx.soundHandler.bind(this, word.audioMeaning)} title=\"Прослушать произношение\" />\r\n          </div>\r\n          <div\r\n            className=\"word__meaning-transl\"\r\n            style={{ display: `${wordCntx.learnd || !wordCntx.showExtraTransl ? \"none\" : \"flex\"}` }}\r\n          >\r\n            {word.textMeaningTranslate}{\" \"}\r\n          </div>\r\n          <br />\r\n          <div className=\"wordtest__example\" style={{ display: `${wordCntx.learnd ? \"none\" : \"flex\"}` }}>\r\n            <div dangerouslySetInnerHTML={{ __html: word.textExample }} />\r\n            <VolumeUpIcon onClick={wordCntx.soundHandler.bind(this, word.audioExample)} title=\"Прослушать произношение\" />\r\n          </div>\r\n\r\n          <div className=\"wordtest__meaning-transl\" hidden={!wordCntx.learnd}>\r\n            {testExample}\r\n          </div>\r\n          <div className=\"word__example-transl\" hidden={!wordCntx.showExtraTransl}>\r\n            {word.textExampleTranslate}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"wordtest__buttons\" hidden={!wordCntx.showDifButton}>\r\n        {wordCntx.showDifButton ? (\r\n          <button onClick={difClickHandler}>{diffword ? \"Убрать из сложных\" : \"Сложное слово\"}</button>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport \"../../styles/pages/testpage.scss\";\r\nimport WordDifTest from \"../componets/worddIftest\";\r\nimport { useWordContext } from \"../context/WordContext\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport Complete from \"../componets/taskcompl\";\r\nimport MainLayout from \"../layouts/MainLayout\";\r\n\r\nexport default function TestingDifPage() {\r\n  const [words, setWords] = useState([]);\r\n  const [load, setLoad] = useState(false);\r\n  const [compl, setCompl] = useState(false);\r\n  const wordCntx = useWordContext();\r\n  const [learned, setLearned] = useState([]);\r\n  const [crct, setCrct] = useState([]);\r\n  let dWordsId = [];\r\n\r\n  let wordsarr = [];\r\n\r\n  //   let correct = [];\r\n\r\n  function createDifArray() {\r\n    let arr = [];\r\n    if (\"difWordId\" in localStorage) {\r\n      dWordsId = JSON.parse(localStorage.getItem(\"difWordId\"));\r\n      for (let i = 0; arr.length < 20; i += 1) {\r\n        let a = Math.floor(Math.random() * dWordsId.length);\r\n        if (!arr.includes(dWordsId[a])) {\r\n          arr.push(dWordsId[a]);\r\n        }\r\n      }\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  useEffect(() => {\r\n    let wrds = createDifArray();\r\n    wordCntx.setCount(0);\r\n    wordCntx.pageHandler();\r\n    setCompl(false);\r\n    wrds.map((elem) => {\r\n      fetch(`https://react-learnwords-rslang.herokuapp.com/words/${elem}`)\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(\"HTTP error \" + response.status);\r\n          }\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          wordsarr = wordsarr.concat(data);\r\n          data && setWords(wordsarr);\r\n          setLoad(true);\r\n        })\r\n        .catch((error) => console.error(\"country countries loader\", error));\r\n    });\r\n    setWords(wordsarr);\r\n  }, []);\r\n\r\n  function clickNextHandler() {\r\n    learnComplited();\r\n    wordCntx.setCount(wordCntx.count === 19 ? 0 : wordCntx.count + 1);\r\n    wordCntx.setAnswer(\"\");\r\n    wordCntx.setLearnd(true);\r\n    if (wordCntx.correct) {\r\n      wordCntx.setCorrect(false);\r\n      wordCntx.setHide(true);\r\n    }\r\n  }\r\n\r\n  function clickPrevHandler() {\r\n    learnComplited();\r\n    wordCntx.setCount(wordCntx.count === 0 ? 19 : wordCntx.count - 1);\r\n    wordCntx.setAnswer(\"\");\r\n    wordCntx.setLearnd(true);\r\n  }\r\n\r\n  function learnComplited() {\r\n    setLearned(crct);\r\n    setCompl(\r\n      words.every((elem) => {\r\n        return learned.includes(elem.id);\r\n      })\r\n    );\r\n    if (compl) {\r\n      wordCntx.progressHandler();\r\n    }\r\n  }\r\n\r\n  if (load) {\r\n    return (\r\n      <MainLayout>\r\n        <div className='testpage__cont'>\r\n      <div className=\"testpage__container\">\r\n        {compl ? <Complete /> : null}\r\n        <div className=\"testpage__arrow\" onClick={clickPrevHandler}>\r\n          <ArrowBackIosIcon fontSize=\"large\" />\r\n        </div>\r\n        <div className=\"testpage__word\">{<WordDifTest word={words[wordCntx.count]} crct={crct} setCrct={setCrct} />}</div>\r\n        <div className=\"testpage__arrow\" onClick={clickNextHandler}>\r\n          <ArrowForwardIosIcon fontSize=\"large\" />\r\n        </div>\r\n      </div>\r\n      </div>\r\n      </MainLayout>\r\n    );\r\n  } else {\r\n    return <MainLayout><div>LOADING...</div></MainLayout>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Registration from \"../blocks/registration\";\r\nimport Login from \"../blocks/login\";\r\nimport MainPage from \"../pages/MainPage\";\r\nimport Header from \"../blocks/header\";\r\nimport HeaderAuthorized from \"../blocks/header-autorized\";\r\nimport TestingPage from \"../pages/testpage\";\r\nimport TextBook from \"../pages/textbook\";\r\nimport { WordProvider } from \"../context/WordContext\";\r\nimport Vocabulary from \"../pages/vocabulary\";\r\nimport Wordlist from \"../pages/wordlist\";\r\nimport Minigames from \"../pages/minigames\";\r\nimport Sprint from \"../pages/game-sprint\";\r\nimport Savanna from \"../pages/savanna\";\r\nimport AudioChallenge from \"../pages/audioChallenge\";\r\nimport EnglishForKids from \"../pages/englishforkids\";\r\nimport Settings from \"../pages/settings\";\r\nimport TestingDifPage from \"../pages/testdif\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nconst routeList = [\r\n  {\r\n    path: \"/\",\r\n    Component: MainPage,\r\n  },\r\n  {\r\n    path: \"/games/savanna/:group?/:page?\",\r\n    Component: Savanna,\r\n  },\r\n  {\r\n    path: \"/games/audio/:group?/:page?\",\r\n    Component: AudioChallenge,\r\n  },\r\n  {\r\n    path: \"/games/forkids/:group?/:page?\",\r\n    Component: EnglishForKids,\r\n  },\r\n  {\r\n    path: \"/classbook\",\r\n    Component: TextBook,\r\n  },\r\n  {\r\n    path: \"/vocabulary/:type/:group?/:page?\",\r\n    Component: Vocabulary,\r\n  },\r\n  {\r\n    path: \"/wordlist/:group/:page\",\r\n    Component: Wordlist,\r\n  },\r\n  {\r\n    path: \"/games\",\r\n    Component: Minigames,\r\n  },\r\n  {\r\n    path: \"/games/sprint\",\r\n    Component: Sprint,\r\n  },\r\n];\r\n\r\nexport default (isAuthenticated) => {\r\n  if (isAuthenticated) {\r\n    return (\r\n      <Switch>\r\n        <WordProvider>\r\n          <Route path=\"/login\" exact>\r\n            <Login></Login>\r\n          </Route>\r\n          <Route path=\"/register\" exact>\r\n            <Registration></Registration>\r\n          </Route>\r\n          <Settings />\r\n          <Route path={\"/classbook\"} exact>\r\n            <TextBook />\r\n          </Route>\r\n          <Route path={\"/testing\"}>\r\n            <TestingPage />\r\n          </Route>\r\n          <Route path={\"/testingdif\"}>\r\n            <TestingDifPage />\r\n          </Route>\r\n          <Route path=\"/vocabulary/:type/:group?/:page?\">\r\n            <Vocabulary />\r\n          </Route>\r\n          <Route path=\"/wordlist/:group/:page\">\r\n            <Wordlist />\r\n          </Route>\r\n          <Route path=\"/\" exact>\r\n            <MainPage></MainPage>\r\n          </Route>\r\n          <Route path={\"/games/savanna/:group?/:page?\"} exact render={(props) => <Savanna {...props}></Savanna>} />\r\n          <Route path={\"/games/audio/:group?/:page?\"} exact render={(props) => <AudioChallenge {...props}></AudioChallenge>} />\r\n          <Route path={\"/games/forkids/:group?/:page?\"} exact render={(props) => <EnglishForKids {...props}></EnglishForKids>} />\r\n          <Route path={\"/games/sprint/:group?/:page?\"} exact render={(props) => <Sprint {...props} />} />\r\n          <Redirect to={\"/\"} />\r\n        </WordProvider>\r\n      </Switch>\r\n    );\r\n  }\r\n  return (\r\n    <Switch>\r\n      <div className=\"content-wrapper\">\r\n        <WordProvider>\r\n          <Route path=\"/\" exact>\r\n            <MainPage></MainPage>\r\n          </Route>\r\n          <Route path=\"/login\" exact>\r\n            <Login></Login>\r\n          </Route>\r\n          <Route path=\"/register\" exact>\r\n            <Registration></Registration>\r\n          </Route>\r\n          <Settings />\r\n          <Route path={\"/classbook\"} exact>\r\n            <TextBook />\r\n          </Route>\r\n          <Route path={\"/testing\"}>\r\n            <TestingPage />\r\n          </Route>\r\n          <Route path={\"/testingdif\"}>\r\n            <TestingDifPage />\r\n          </Route>\r\n          <Route path=\"/vocabulary/:type/:group?/:page?\">\r\n            <Vocabulary />\r\n          </Route>\r\n          <Route path=\"/wordlist/:group/:page\">\r\n            <Wordlist />\r\n          </Route>\r\n          <Route path={\"/games/sprint/:group?/:page?\"} exact render={(props) => <Sprint {...props} />} />\r\n          <Route path={\"/games/savanna/:group?/:page?\"} exact render={(props) => <Savanna {...props}></Savanna>} />\r\n          <Route path={\"/games/audio/:group?/:page?\"} exact render={(props) => <AudioChallenge {...props}></AudioChallenge>} />\r\n          <Route path={\"/games/forkids/:group?/:page?\"} exact render={(props) => <EnglishForKids {...props}></EnglishForKids>} />\r\n          <Redirect to={\"/\"} />\r\n        </WordProvider>\r\n      </div>\r\n    </Switch>\r\n  );\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/login\" exact>\r\n        <Login></Login>\r\n      </Route>\r\n      <Route path=\"/register\" exact>\r\n        <Registration></Registration>\r\n      </Route>\r\n      <WordProvider>\r\n        <Route path=\"/\" exact>\r\n          <MainPage></MainPage>\r\n        </Route>\r\n\r\n        <Route path={\"/classbook\"} exact>\r\n          <TextBook />\r\n        </Route>\r\n        <Route path={\"/testing\"}>\r\n          <TestingPage />\r\n        </Route>\r\n        <Route path=\"/vocabulary/:type\">\r\n          <Vocabulary />\r\n        </Route>\r\n        <Route path=\"/wordlist/:group/:page\">\r\n          <Wordlist />\r\n        </Route>\r\n        <Route path=\"/games\" exact>\r\n          <Minigames />\r\n        </Route>\r\n        <Route path={\"/games/sprint\"} exact>\r\n          <Sprint />\r\n        </Route>\r\n        <Redirect to={\"/\"} />\r\n      </WordProvider>\r\n    </Switch>\r\n  );\r\n};\r\n","import { useState, useCallback, useEffect } from \"react\";\r\n\r\nconst storageName = \"userData\";\r\n\r\nexport default () => {\r\n  const [token, setToken] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [name, setName] = useState(null);\r\n  const [refreshToken, setRefreshToken] = useState(null);\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const login = useCallback((jwtToken, id, username, rToken, aMessage) => {\r\n    setToken(jwtToken);\r\n    setUserId(id);\r\n    setName(username);\r\n    setRefreshToken(rToken);\r\n    setMessage(aMessage);\r\n    localStorage.setItem(\r\n      storageName,\r\n      JSON.stringify({\r\n        userId: id,\r\n        token: jwtToken,\r\n        name: username,\r\n        refreshToken: rToken,\r\n        message: aMessage,\r\n      })\r\n    );\r\n  }, []);\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setUserId(null);\r\n    setName(null);\r\n    setRefreshToken(null);\r\n    setMessage(null);\r\n    localStorage.removeItem(storageName);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(storageName));\r\n    if (storageName in localStorage) {\r\n      if (\r\n        data.userId &&\r\n        data.token &&\r\n        data.name &&\r\n        data.refreshToken &&\r\n        data.message\r\n      ) {\r\n        login(\r\n          data.token,\r\n          data.userId,\r\n          data.name,\r\n          data.refreshToken,\r\n          data.message\r\n        );\r\n      }\r\n    }\r\n  }, [login]);\r\n  return { login, logout, token, userId, name, refreshToken, message };\r\n};\r\n","import React from \"react\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nimport useRoutes from \"../logic/routes\";\r\nimport useAuth from \"../hooks/auth.hook\";\r\nimport AuthContext from \"../context/AuthContext\";\r\n\r\nfunction PageComponents() {\r\n  const {\r\n    token,\r\n    login,\r\n    logout,\r\n    userId,\r\n    name,\r\n    refreshToken,\r\n    message,\r\n  } = useAuth();\r\n  const isAuthenticated = !!token;\r\n  const routes = useRoutes(isAuthenticated);\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        token,\r\n        login,\r\n        logout,\r\n        userId,\r\n        isAuthenticated,\r\n        name,\r\n        refreshToken,\r\n        message,\r\n      }}\r\n    >\r\n      <HashRouter basename=\"/\">{routes}</HashRouter>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default PageComponents;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport PageComponents from \"./js/pages/PageComponents\";\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PageComponents />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}